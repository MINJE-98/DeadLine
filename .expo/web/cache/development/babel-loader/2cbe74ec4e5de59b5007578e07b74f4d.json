{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { teamlist } from \"../actions/index\";\nvar SET_TEAMLIST = teamlist.SET_TEAMLIST;\nvar defaultSate = {\n  teamlist: null,\n  isload: false\n};\nexport default TeamReducer = function TeamReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultSate;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_TEAMLIST:\n      console.log(\"SET_TEAMLIST\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        teamlist: action.teamlist\n      });\n\n    default:\n      console.log(\"TeamReducer\");\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine-client/src/redux/reducers/TeamReducer.js"],"names":["teamlist","SET_TEAMLIST","defaultSate","isload","TeamReducer","state","action","type","console","log"],"mappings":";;;;;;AAAA,SAASA,QAAT;IACQC,Y,GAAiBD,Q,CAAjBC,Y;AAGR,IAAMC,WAAW,GAAE;AACfF,EAAAA,QAAQ,EAAE,IADK;AAEfG,EAAAA,MAAM,EAAE;AAFO,CAAnB;AAIA,eAAeC,WAAW,GAAG,uBAAgC;AAAA,MAA/BC,KAA+B,uEAAvBH,WAAuB;AAAA,MAAVI,MAAU;;AAEzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,YAAL;AACIO,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,6CAAWJ,KAAX;AAAkBL,QAAAA,QAAQ,EAAEM,MAAM,CAACN;AAAnC;;AAKJ;AACIQ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,aAAOJ,KAAP;AAVR;AAYH,CAdD","sourcesContent":["import { teamlist } from '../actions/index'\nconst { SET_TEAMLIST } = teamlist\n\n//초기 state 설정\nconst defaultSate ={\n    teamlist: null,\n    isload: false\n}\nexport default TeamReducer = (state = defaultSate, action) =>{\n\n    switch (action.type){\n        case SET_TEAMLIST:\n            console.log(\"SET_TEAMLIST\");\n            return {...state, teamlist: action.teamlist}\n        // case REFRESH_TEAMLIST:\n        //     console.log(\"REFRESH_TEAMLIST\");\n        //     return {...state, isload: action.isload}\n        // 초기 상태는 default에서 정합니다.\n        default:\n            console.log(\"TeamReducer\");\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}