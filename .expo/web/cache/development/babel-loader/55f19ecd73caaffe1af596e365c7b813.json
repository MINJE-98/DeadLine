{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/minje/Desktop/DeadLine-client/src/containers/home/HomeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { Context } from \"../../context/conext\";\nimport { homestyles } from \"../../styles/light/styles\";\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    _classCallCheck(this, HomeScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.context.teamlist && this.context.refresh();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        style: homestyles.defaultStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      });\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nHomeScreen.contextType = Context;\nexport { HomeScreen as default };","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine-client/src/containers/home/HomeScreen.js"],"names":["React","Component","Icon","Context","homestyles","HomeScreen","context","teamlist","refresh","defaultStyle","contextType"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;AAEA,OAAQC,IAAR;AAEA,SAASC,OAAT;AACA,SAASC,UAAT;;IAEqBC,U;;;;;;;;;;;;;WAGnB,6BAAmB;AAGjB,WAAKC,OAAL,CAAaC,QAAb,IAAyB,KAAKD,OAAL,CAAaE,OAAb,EAAzB;AACD;;;WACC,kBAAQ;AACN,aACI,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEJ,UAAU,CAACK,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAoDD;;;;EA7DmCR,S;;AAAnBI,U,CACZK,W,GAAcP,O;SADFE,U","sourcesContent":["import React, { Component } from 'react';\nimport { Text, View, StyleSheet, SafeAreaView, FlatList, Modal, Alert, TouchableOpacity, Button } from 'react-native';\nimport  Icon  from 'react-native-vector-icons/MaterialIcons';\n\nimport { Context } from '../../context/conext';\nimport { homestyles } from '../../styles/light/styles'\n\nexport default class HomeScreen extends Component{\n  static contextType = Context\n\n  componentDidMount(){\n    // 팀리스트가 비어있을 경우. \n    // refresh를 호출합니다.\n    this.context.teamlist && this.context.refresh()\n  }\n    render(){\n      return (\n          <SafeAreaView style={homestyles.defaultStyle}>\n            {/* <FlatList　\n            style={{width: \"100%\", height: \"100%\"}}\n            data={this.context.teamlist}\n            refreshing={this.context.isload}\n            onRefresh={this.context.refresh}\n            ListEmptyComponent={\n              //루트 레이아웃\n                <View style={homestyles.defaultStyle}>\n                  <Text style={[homestyles.defaultFont, homestyles.homeFont]}>팀에 소속되어 있지 않습니다.</Text>\n                  <View style={{flexDirection: \"row\"}}>\n                    <TouchableOpacity onPress={()=> this.props.navigation.navigate('maketeam')} style={[homestyles.defaultBox, homestyles.emptybutton]}>\n                      <Icon name=\"group-add\" size={30} color=\"#3c444f\"/>\n                      <Text style={[homestyles.defaultFont, homestyles.homeFont]}>팀 생성</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity onPress={()=> this.props.navigation.navigate('jointeam')} style={[homestyles.defaultBox, homestyles.emptybutton]}>\n                      <Icon name=\"email\" size={30} color=\"#3c444f\"/>\n                      <Text style={[homestyles.defaultFont, homestyles.homeFont]}>팀 가입</Text>\n                    </TouchableOpacity>\n                  </View>\n                </View>\n            } \n            keyExtractor={(item)=> item.tuid}\n            renderItem={({item}) => {\n              return(\n                <View style={homestyles.defaultStyle}>\n                  {item.state == 2 \n                  ? <View style={[homestyles.defaultBox, homestyles.teambutton]}>\n                      <Text style={homestyles.defaultFont}>{item.tuid}</Text>\n                      <Text style={homestyles.defaultFont}>{item.name}</Text>\n                    </View>\n                  : item.state == 1\n                  ? <TouchableOpacity style={[homestyles.defaultBox, homestyles.teambutton]} onPress={()=> {\n                    this.props.navigation.navigate('teaminfoNavigator', {teaminfo: item});\n                  }}>\n                      <Text style={[{color: \"#3c444f\", fontSize: 15, fontWeight: \"bold\"}]}>{item.tuid}</Text>\n                      <Text style={[{color: \"#3c444f\", fontSize: 15, fontWeight: \"bold\"}]}>{item.name}</Text>\n                    </TouchableOpacity>\n                  : <TouchableOpacity style={[homestyles.defaultBox, homestyles.teambutton]} onPress={()=> {\n                     this.props.navigation.navigate('teaminfoNavigator', {teaminfo: item});\n                  }}>\n                      <Text style={[{color: \"#3c444f\", fontSize: 15, fontWeight: \"bold\"}]}>{item.tuid}</Text>\n                      <Text style={[{color: \"#3c444f\", fontSize: 15, fontWeight: \"bold\"}]}>{item.name}</Text>\n                    </TouchableOpacity>\n                  }\n              </View>\n              )\n            }\n            } /> */}\n          </SafeAreaView>\n      ); \n    }\n}"]},"metadata":{},"sourceType":"module"}