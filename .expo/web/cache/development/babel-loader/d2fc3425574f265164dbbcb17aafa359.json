{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/minje/Desktop/DeadLine-client/src/containers/home/HomeScreen.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { set_teamlist } from \"../../redux/actions/TeamAction\";\nimport { select_team } from \"../../redux/actions/TeamInfoAction\";\nimport { homestyles } from \"../../styles/light/styles\";\nimport TeamList from \"../../components/Teamlist\";\nexport default function HomeScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isload = _useState2[0],\n      setIsload = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.AuthReducer;\n  }),\n      token = _useSelector.token;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.TeamReducer;\n  }),\n      teamlist = _useSelector2.teamlist;\n\n  var dispatch = useDispatch();\n\n  var refreshTeamlist = function refreshTeamlist() {\n    console.log(\"A\");\n    setIsload(true);\n    dispatch(set_teamlist(token));\n    setIsload(false);\n  };\n\n  var selectTeam = function selectTeam(teaminfo) {\n    dispatch(select_team(teaminfo));\n  };\n\n  var _renderEmptyComponent = function _renderEmptyComponent() {\n    return React.createElement(View, {\n      style: homestyles.defaultStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: [homestyles.defaultFont, homestyles.homeFont],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, \"\\uD300\\uC5D0 \\uC18C\\uC18D\\uB418\\uC5B4 \\uC788\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('maketeam');\n      },\n      style: [homestyles.defaultBox, homestyles.emptybutton],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, React.createElement(Icon, {\n      name: \"group-add\",\n      size: 30,\n      color: \"#3c444f\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      style: [homestyles.defaultFont, homestyles.homeFont],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"\\uD300 \\uC0DD\\uC131\")), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('jointeam');\n      },\n      style: [homestyles.defaultBox, homestyles.emptybutton],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, React.createElement(Icon, {\n      name: \"email\",\n      size: 30,\n      color: \"#3c444f\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      style: [homestyles.defaultFont, homestyles.homeFont],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"\\uD300 \\uAC00\\uC785\"))));\n  };\n\n  var _renderComponent = function _renderComponent(item) {\n    return React.createElement(React.Fragment, null, React.createElement(TeamList, {\n      state: item.state,\n      tuid: item.tuid,\n      name: item.name,\n      onPress: function onPress() {\n        selectTeam(item);\n        navigation.navigate('Team');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return React.createElement(FlatList, {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    data: teamlist,\n    refreshing: isload,\n    onRefresh: refreshTeamlist,\n    ListEmptyComponent: function ListEmptyComponent() {\n      return _renderEmptyComponent();\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.tuid;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return _renderComponent(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine-client/src/containers/home/HomeScreen.js"],"names":["React","useState","Icon","useSelector","useDispatch","set_teamlist","select_team","homestyles","TeamList","HomeScreen","navigation","isload","setIsload","state","AuthReducer","token","TeamReducer","teamlist","dispatch","refreshTeamlist","console","log","selectTeam","teaminfo","_renderEmptyComponent","defaultStyle","defaultFont","homeFont","flexDirection","navigate","defaultBox","emptybutton","_renderComponent","item","tuid","name","width","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Text, View, FlatList, TouchableOpacity } from 'react-native';\nimport  Icon  from 'react-native-vector-icons/MaterialIcons';\n// 리둑스 훅\nimport { useSelector, useDispatch } from 'react-redux';\n\n\n// 사용할 액션\nimport { set_teamlist } from '../../redux/actions/TeamAction'\nimport { select_team } from '../../redux/actions/TeamInfoAction'\nimport { homestyles } from '../../styles/light/styles'\nimport TeamList from '../../components/Teamlist';\n\n/**\n * HOME 스크린입니다.\n */\n\nexport default function HomeScreen({ navigation }){\n  // 로딩 모달 상태값\n  const [isload, setIsload] = useState(false);\n\n  // 토큰\n  const { token } = useSelector( state => state.AuthReducer)\n  // 팀리스트\n  const { teamlist } = useSelector( state => state.TeamReducer)\n  const dispatch = useDispatch();\n  // 팀리스트 새로고침\n  const refreshTeamlist = () => {\n    console.log(\"A\");\n    setIsload(true);\n    dispatch(set_teamlist(token));\n    setIsload(false);\n  };\n  // 팀선택\n  const selectTeam = (teaminfo) =>{\n    dispatch(select_team(teaminfo));\n  }\n  // 팀리스트의 값이 없을 경우.\n  const _renderEmptyComponent = () =>(\n    <View style={homestyles.defaultStyle}>\n      <Text style={[homestyles.defaultFont, homestyles.homeFont]}>팀에 소속되어 있지 않습니다.</Text>\n      <View style={{flexDirection: \"row\"}}>\n        <TouchableOpacity onPress={()=> navigation.navigate('maketeam')} style={[homestyles.defaultBox, homestyles.emptybutton]}>\n          <Icon name=\"group-add\" size={30} color=\"#3c444f\"/>\n          <Text style={[homestyles.defaultFont, homestyles.homeFont]}>팀 생성</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={()=> navigation.navigate('jointeam')} style={[homestyles.defaultBox, homestyles.emptybutton]}>\n          <Icon name=\"email\" size={30} color=\"#3c444f\"/>\n          <Text style={[homestyles.defaultFont, homestyles.homeFont]}>팀 가입</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  )\n  // 팀리스트의 값이 있는 경우\n  const _renderComponent = (item) =>(\n      <>\n      {/* {console.log(item)} */}\n      <TeamList \n        state={item.state}\n        tuid={item.tuid}\n        name={item.name}\n        onPress={()=> {\n          selectTeam(item)  \n          navigation.navigate('Team')\n        }}\n      />\n      </>\n  )\n  return (\n    <FlatList　\n    style={{width: \"100%\", height: \"100%\"}}\n    data={teamlist}\n    refreshing={isload}\n    onRefresh={refreshTeamlist}\n    ListEmptyComponent={()=> _renderEmptyComponent() } \n    keyExtractor={(item)=> item.tuid}\n    renderItem={({item}) => _renderComponent(item)} />\n  )\n}"]},"metadata":{},"sourceType":"module"}