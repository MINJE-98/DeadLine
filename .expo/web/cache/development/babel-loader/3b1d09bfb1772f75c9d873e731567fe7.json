{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/minje/Desktop/DeadLine-client/src/containers/auth/AuthScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { SocialIcon } from 'react-native-elements';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport * as Facebook from 'expo-facebook';\nimport { authstyles } from \"../../styles/light/styles\";\nimport FacebookInit from \"../../config/FacebookConfig\";\n\nvar AuthScreen = function (_Component) {\n  _inherits(AuthScreen, _Component);\n\n  var _super = _createSuper(AuthScreen);\n\n  function AuthScreen() {\n    var _this;\n\n    _classCallCheck(this, AuthScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.signInWithFacebook = function _callee() {\n      var _await$Facebook$logIn, type, token;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(FacebookInit);\n\n            case 3:\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Facebook.logInWithReadPermissionsAsync({\n                permissions: ['public_profile', 'email']\n              }));\n\n            case 5:\n              _await$Facebook$logIn = _context.sent;\n              type = _await$Facebook$logIn.type;\n              token = _await$Facebook$logIn.token;\n\n              if (type === 'success') {\n                console.log(token);\n              }\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n\n              if (_context.t0.response) {\n                console.log(_context.t0.response);\n\n                if (_context.t0.response.status === 404) {\n                  console.log(\"404\");\n                } else {\n                  console.log(\"?\");\n                }\n              } else if (_context.t0.request) {\n                Alert.alert(\"\", \"통신을 실패하였습니다.\");\n              } else {\n                console.log('Error', _context.t0.message);\n              }\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(AuthScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(KeyboardAvoidingView, {\n        style: authstyles.defaultStyle,\n        behavior: \"padding\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, React.createElement(SocialIcon, {\n        title: \"\\uD398\\uC774\\uC2A4\\uBD81\\uC73C\\uB85C \\uC2DC\\uC791\\uD558\\uAE30\",\n        style: {\n          width: \"90%\"\n        },\n        button: true,\n        type: \"facebook\",\n        onPress: function onPress() {\n          return _this2.signInWithFacebook();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return AuthScreen;\n}(Component);\n\nexport { AuthScreen as default };","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine-client/src/containers/auth/AuthScreen.js"],"names":["React","Component","SocialIcon","Facebook","authstyles","FacebookInit","AuthScreen","signInWithFacebook","logInWithReadPermissionsAsync","permissions","type","token","console","log","response","status","request","Alert","alert","message","defaultStyle","width"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,uBAA3B;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AAEA,SAASC,UAAT;AACA,OAAOC,YAAP;;IAEqBC,U;;;;;;;;;;;;;;;;UAQnBC,kB,GAAqB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAGXF,YAHW;;AAAA;AAAA;AAAA,+CAKaF,QAAQ,CAACK,6BAAT,CAAuC;AACnEC,gBAAAA,WAAW,EAAE,CAAC,gBAAD,EAAmB,OAAnB;AADsD,eAAvC,CALb;;AAAA;AAAA;AAKTC,cAAAA,IALS,yBAKTA,IALS;AAKHC,cAAAA,KALG,yBAKHA,KALG;;AAQjB,kBAAID,IAAI,KAAK,SAAb,EAAwB;AACtBE,gBAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAQC;;AAjBc;AAAA;;AAAA;AAAA;AAAA;;AAmBjB,kBAAI,YAAMG,QAAV,EAAoB;AAClBF,gBAAAA,OAAO,CAACC,GAAR,CAAY,YAAMC,QAAlB;;AAEE,oBAAI,YAAMA,QAAN,CAAeC,MAAf,KAA0B,GAA9B,EAAmC;AACjCH,kBAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAEC,iBAHH,MAGS;AACLD,kBAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AAEH;AACF,eAVH,MAWO,IAAI,YAAMG,OAAV,EAAmB;AAEtBC,gBAAAA,KAAK,CAACC,KAAN,CAAY,EAAZ,EAAe,cAAf;AACH,eAHM,MAIA;AAEHN,gBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,YAAMM,OAA3B;AACD;;AArCc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAwCrB,kBAAQ;AAAA;;AACN,aACE,oBAAC,oBAAD;AAAsB,QAAA,KAAK,EAAEf,UAAU,CAACgB,YAAxC;AAAsD,QAAA,QAAQ,EAAC,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,+DAAlB;AAAgC,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAvC;AAAyD,QAAA,MAAM,EAAE,IAAjE;AAAuE,QAAA,IAAI,EAAC,UAA5E;AAAuF,QAAA,OAAO,EAAE;AAAA,iBAAK,MAAI,CAACd,kBAAL,EAAL;AAAA,SAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAtDqCN,S;;SAAnBK,U","sourcesContent":["import React, { Component } from \"react\";\nimport { SocialIcon } from 'react-native-elements'\nimport { Alert, KeyboardAvoidingView } from 'react-native';\nimport * as Facebook from 'expo-facebook';\n\nimport { authstyles } from '../../styles/light/styles'\nimport FacebookInit from '../../config/FacebookConfig';\n\nexport default class AuthScreen extends Component{\n  /** 로그인\n   * 토큰을 받습니다.\n   * 유저가 있는지 확인합니다.\n   * 로컬에 토큰을 저장합니다.\n   * \n   * \n  */\n  signInWithFacebook = async() =>{\n    try {\n      //로딩 구현\n      await FacebookInit;\n      // 1. 토큰을 받음\n      const { type, token } = await Facebook.logInWithReadPermissionsAsync({\n        permissions: ['public_profile', 'email'],\n      });\n      if (type === 'success') {\n        console.log(token)\n          // 2-1. 유저가 없을 시 생성\n          // const get = await api.get_user(token);\n          // if(get.data.data == undefined) {\n          //   await api.set_user(token)\n          //   this.props.dispatch({type: 'login'})\n          // }\n          // else this.props.dispatch({type: 'login'})\n        }\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response);\n          // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n          if (error.response.status === 404) {\n            console.log(\"404\")\n            // this.props.dispatch({type: 'logout'})\n            } else {\n              console.log(\"?\");\n            // this.props.dispatch({type: 'logout'})\n          }\n        }\n        else if (error.request) {\n          // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n          Alert.alert(\"\",\"통신을 실패하였습니다.\")\n      }\n        else {\n          // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n          console.log('Error', error.message);\n        }\n      }\n}\n  render(){\n    return (\n      <KeyboardAvoidingView style={authstyles.defaultStyle} behavior=\"padding\">\n        <SocialIcon title=\"페이스북으로 시작하기\" style={{ width: \"90%\" }} button={true} type=\"facebook\" onPress={()=> this.signInWithFacebook()} />\n      </KeyboardAvoidingView>\n    );\n  }\n    \n}\n\n"]},"metadata":{},"sourceType":"module"}