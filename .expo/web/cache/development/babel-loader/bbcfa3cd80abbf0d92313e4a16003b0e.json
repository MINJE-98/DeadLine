{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/minje/Desktop/DeadLine/screen/HomeScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Header, Icon } from 'react-native-elements';\nimport firebase from 'firebase';\nexport default function HomeScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setrefreshing = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Loading = _useState6[0],\n      setLoding = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      TeamList = _useState8[0],\n      setTeamList = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      TeamName = _useState10[0],\n      setTeamName = _useState10[1];\n\n  useEffect(function () {\n    function getTeamList() {\n      var LocalTeamList, obTeamList;\n      return _regeneratorRuntime.async(function getTeamList$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"TeamList\"));\n\n            case 2:\n              LocalTeamList = _context.sent;\n              obTeamList = JSON.parse(LocalTeamList);\n              console.log(obTeamList);\n              setrefreshing(true);\n              setLoding(false);\n              setTeamList(obTeamList);\n              refresh();\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    if (Loading) {\n      getTeamList();\n    }\n  });\n\n  var getDB = function getDB() {\n    return firebase.database();\n  };\n\n  var getUserInfo = function getUserInfo() {\n    return firebase.auth().currentUser;\n  };\n\n  var getTeamName = function getTeamName(TeamUid) {\n    return TeamList[TeamUid].TeamName;\n  };\n\n  function MakeTeam() {\n    return _regeneratorRuntime.async(function MakeTeam$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            Alert.alert(\"팀 생성\", \"팀을 생성하시겠습니까?\", [{\n              text: \"취소\",\n              onPress: function onPress() {\n                setModalVisible(!modalVisible);\n              }\n            }, {\n              text: \"확인\",\n              onPress: function onPress() {\n                var TeamUid = Date.now();\n                getDB().ref('/Teams/' + TeamUid).set({\n                  TeamName: TeamName\n                });\n                getDB().ref('/Teams/' + TeamUid + '/TeamMembers/' + getUserInfo().uid).set({\n                  Rank: 'Admin'\n                });\n                setModalVisible(!modalVisible);\n                setLoding(true);\n              }\n            }]);\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function showTeam() {\n    var keyList = [];\n    if (!TeamList) return keyList;\n    var TeamUid = Object.keys(TeamList);\n    TeamUid.forEach(function (element) {\n      return keyList.push({\n        key: element\n      });\n    });\n    return keyList;\n  }\n\n  function refresh() {\n    return _regeneratorRuntime.async(function refresh$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            getDB().ref('Teams').once('value').then(function (Data) {\n              var TeamList = Data.val();\n              var TeamUid = Object.keys(TeamList);\n              TeamUid.forEach(function (element) {\n                var UserUid = Object.keys(TeamList[element]['TeamMembers']);\n                var UserFind = UserUid.find(function (element) {\n                  if (element == getUserInfo().uid) return element;\n                });\n                if (!UserFind) delete TeamList[element];\n              });\n              AsyncStorage.setItem(\"TeamList\", JSON.stringify(TeamList));\n              setTeamList(TeamList);\n              setrefreshing(false);\n            });\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    statusBarProps: {\n      barStyle: 'light-content'\n    },\n    barStyle: \"light-content\",\n    centerComponent: {\n      text: '팀 리스트',\n      style: {\n        color: '#fff'\n      }\n    },\n    rightComponent: React.createElement(Icon, {\n      name: \"group-add\",\n      color: \"#fff\",\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }),\n    containerStyle: {\n      backgroundColor: '#3D6DCC',\n      justifyContent: 'space-around'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"\\uD300 \\uC774\\uB984 \\uC785\\uB825\",\n    onChangeText: function onChangeText(Text) {\n      return setTeamName(Text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"\\uCD08\\uB300\\uD560 \\uCE5C\\uAD6C \\uC804\\uD654\\uBC88\\uD638/\\uCE74\\uD1A1\"), React.createElement(Text, {\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"\\uCDE8\\uC18C\"), React.createElement(Text, {\n    onPress: function onPress() {\n      MakeTeam();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"\\uC0DD\\uC131\")))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    style: styles.List,\n    data: showTeam(),\n    refreshing: refreshing,\n    ListEmptyComponent: React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, \"\\uD300\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"),\n    onRefresh: refresh,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Text, {\n        onPress: function onPress() {\n          return props.navigation.navigate('팀 정보', {\n            TeamUid: item.key\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }\n      }, item.key);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  barcode: {\n    position: 'absolute',\n    right: 0,\n    padding: 3\n  },\n  Header: {\n    position: 'absolute',\n    backgroundColor: 'gray',\n    width: '100%',\n    height: '8%',\n    top: 0,\n    borderRadius: 4,\n    margin: 10\n  },\n  List: {\n    height: '100%',\n    width: '100%'\n  },\n  ListView: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  Scanner: {\n    width: 30,\n    height: 30,\n    backgroundColor: 'blue',\n    borderRadius: 1\n  }\n});","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine/screen/HomeScreen.js"],"names":["React","useState","useEffect","Header","Icon","firebase","HomeScreen","props","refreshing","setrefreshing","modalVisible","setModalVisible","Loading","setLoding","TeamList","setTeamList","TeamName","setTeamName","getTeamList","AsyncStorage","getItem","LocalTeamList","obTeamList","JSON","parse","console","log","refresh","getDB","database","getUserInfo","auth","currentUser","getTeamName","TeamUid","MakeTeam","Alert","alert","text","onPress","Date","now","ref","set","uid","Rank","showTeam","keyList","Object","keys","forEach","element","push","key","once","then","Data","val","UserUid","UserFind","find","setItem","stringify","barStyle","style","color","backgroundColor","justifyContent","flex","alignItems","Text","styles","List","item","navigation","navigate","StyleSheet","create","barcode","position","right","padding","width","height","top","borderRadius","margin","ListView","Scanner"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View, StyleSheet, TextInput, FlatList, AsyncStorage, Modal, Alert } from 'react-native';\nimport {Header, Icon} from 'react-native-elements'\nimport firebase from 'firebase';\n\nexport default function HomeScreen(props){\n\n  const [refreshing, setrefreshing] = useState(false);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [Loading, setLoding] = useState(true);\n  const [TeamList, setTeamList] = useState({});\n  const [TeamName, setTeamName] = useState(null);\n  \n\n  useEffect(()=>{\n    // refrsh로 서버에서 데이터 불러오기\n    async function getTeamList(){\n      const LocalTeamList = await AsyncStorage.getItem(\"TeamList\");\n      const obTeamList = JSON.parse(LocalTeamList)\n      console.log(obTeamList);\n      setrefreshing(true);\n      setLoding(false);\n      setTeamList(obTeamList);\n      refresh();\n    }\n    if(Loading){\n      getTeamList()\n    }\n  })\n\n  const getDB = () => firebase.database();\n  const getUserInfo = () => firebase.auth().currentUser;\n  const getTeamName = (TeamUid) => TeamList[TeamUid].TeamName;\n  async function MakeTeam(){\n    Alert.alert(\"팀 생성\",\"팀을 생성하시겠습니까?\",\n    [{text:\"취소\", onPress: ()=>{setModalVisible(!modalVisible)}},\n    {text:\"확인\", onPress: () =>{\n        const TeamUid = Date.now();\n        getDB().ref('/Teams/' + TeamUid).set({\n          TeamName: TeamName\n        })\n        getDB().ref('/Teams/' + TeamUid + '/TeamMembers/' + getUserInfo().uid).set({\n          Rank: 'Admin'\n        })\n        setModalVisible(!modalVisible)\n        setLoding(true)\n      }}, \n    ])\n  }\n  function showTeam(){\n    const keyList = []\n    if(!TeamList) return keyList\n    const TeamUid = Object.keys(TeamList)\n    TeamUid.forEach(element => keyList.push({key:element}))\n    return keyList\n  }\n  async function refresh(){\n    getDB().ref('Teams').once('value').then( Data=>{\n      const TeamList = Data.val();\n      const TeamUid = Object.keys(TeamList);\n      TeamUid.forEach(element => {\n        const UserUid = Object.keys(TeamList[element]['TeamMembers'])\n        const UserFind = UserUid.find(element => {if(element == getUserInfo().uid) return element})\n        if(!UserFind) delete TeamList[element]\n      });\n      AsyncStorage.setItem(\"TeamList\", JSON.stringify(TeamList))\n      setTeamList(TeamList)\n      setrefreshing(false)\n    })\n  }\n  //\n  return (\n    <View>\n      <Header\n        statusBarProps={{ barStyle: 'light-content' }}\n        barStyle=\"light-content\" // or directly\n        centerComponent={{ text: '팀 리스트', style: { color: '#fff' } }}\n        rightComponent={<Icon name='group-add' color='#fff' onPress={()=> setModalVisible(true)}/>}\n        containerStyle={{\n          backgroundColor: '#3D6DCC',\n          justifyContent: 'space-around',\n        }}\n      />\n      <Modal animationType=\"slide\" transparent={true} visible={modalVisible}>\n        <View \n          style={{\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}>\n          <View>\n            <TextInput placeholder=\"팀 이름 입력\" onChangeText={Text => setTeamName(Text)}></TextInput>\n            <Text>초대할 친구 전화번호/카톡</Text>\n            <Text onPress={()=>{setModalVisible(!modalVisible)}}>취소</Text>\n            <Text onPress={()=>{MakeTeam()}}>생성</Text>\n          </View>\n        </View>\n      </Modal>\n      <View>\n        <FlatList\n        style={styles.List}\n        data={showTeam()}  \n        refreshing={refreshing} \n        ListEmptyComponent={<Text>팀이 없습니다.</Text>} \n        onRefresh={refresh} \n        renderItem={({item}) => <Text onPress={()=> props.navigation.navigate('팀 정보', {TeamUid: item.key})}>{item.key}</Text>} />\n      </View>\n    </View>      \n  ); \n  \n}\n  \nconst styles = StyleSheet.create({\n  barcode:{\n    position:'absolute',\n    right:0,\n    padding: 3\n  },\n  Header:{\n    position: 'absolute',\n    backgroundColor: 'gray',\n    width: '100%',\n    height: '8%',\n    top: 0,\n    borderRadius: 4,\n    margin: 10,\n\n  },\n  List:{\n    height:'100%',\n    width: '100%'\n  },\n  ListView:{\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  Scanner:{\n    width:30,\n    height:30,\n    backgroundColor: 'blue',\n    borderRadius:1\n  },\n})\n"]},"metadata":{},"sourceType":"module"}