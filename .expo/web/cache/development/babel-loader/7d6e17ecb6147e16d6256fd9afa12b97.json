{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/minje/Desktop/DeadLine-client/src/navigation/home/MainNavigation.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport HomeScreen from \"../../containers/home/HomeScreen\";\nimport SettingScreen from \"../../containers/home/SettingScreen\";\nimport { HeaderRightIcon, HeaderLeftTitle, HeaderLeftIcon } from \"../../components/Header\";\nvar Stack = createStackNavigator();\n\nvar MainNavigation = function (_Component) {\n  _inherits(MainNavigation, _Component);\n\n  var _super = _createSuper(MainNavigation);\n\n  function MainNavigation() {\n    _classCallCheck(this, MainNavigation);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MainNavigation, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Stack.Navigator, {\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: \"transparent\",\n            elevation: 0,\n            shadowOpacity: 0,\n            borderBottomWidth: 0\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerTitle: function headerTitle() {\n            return React.createElement(React.Fragment, null);\n          },\n          headerLeft: function headerLeft() {\n            return React.createElement(HeaderLeftTitle, {\n              text: \"팀 리스트\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 31\n              }\n            });\n          },\n          headerRight: function headerRight() {\n            return React.createElement(View, {\n              style: {\n                flexDirection: \"row\"\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 15\n              }\n            }, React.createElement(HeaderRightIcon, {\n              iconType: \"MaterialIcons\",\n              name: \"group-add\",\n              onPress: function onPress() {\n                return _this.props.navigation.navigate(\"MakeTeam\");\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }\n            }), React.createElement(HeaderRightIcon, {\n              iconType: \"MaterialIcons\",\n              name: \"email\",\n              onPress: function onPress() {\n                return _this.props.navigation.navigate(\"JoinTeam\");\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }\n            }), React.createElement(HeaderRightIcon, {\n              iconType: \"MaterialIcons\",\n              name: \"settings\",\n              onPress: function onPress() {\n                return _this.props.navigation.navigate(\"Setting\");\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }\n            }));\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Setting\",\n        component: SettingScreen,\n        options: {\n          headerTitle: function headerTitle() {\n            return React.createElement(React.Fragment, null);\n          },\n          headerLeft: function headerLeft() {\n            return React.createElement(HeaderLeftIcon, {\n              iconType: \"MaterialIcons\",\n              name: \"arrow-back\",\n              onPress: function onPress() {\n                return _this.props.navigation.goBack();\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return MainNavigation;\n}(Component);\n\nexport { MainNavigation as default };","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine-client/src/navigation/home/MainNavigation.js"],"names":["React","Component","createStackNavigator","HomeScreen","SettingScreen","HeaderRightIcon","HeaderLeftTitle","HeaderLeftIcon","Stack","MainNavigation","headerStyle","backgroundColor","elevation","shadowOpacity","borderBottomWidth","headerTitle","headerLeft","headerRight","flexDirection","props","navigation","navigate","goBack"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,OAAOC,UAAP;AACA,OAAOC,aAAP;AAEA,SACEC,eADF,EAEEC,eAFF,EAGEC,cAHF;AASA,IAAMC,KAAK,GAAGN,oBAAoB,EAAlC;;IACqBO,c;;;;;;;;;;;;;WACnB,kBAAS;AAAA;;AACP,aACE,oBAAC,KAAD,CAAO,SAAP;AACE,QAAA,aAAa,EAAE;AACbC,UAAAA,WAAW,EAAE;AACXC,YAAAA,eAAe,EAAE,aADN;AAEXC,YAAAA,SAAS,EAAE,CAFA;AAGXC,YAAAA,aAAa,EAAE,CAHJ;AAIXC,YAAAA,iBAAiB,EAAE;AAJR;AADA,SADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAEX,UAFb;AAGE,QAAA,OAAO,EAAE;AACPY,UAAAA,WAAW,EAAE;AAAA,mBAAM,yCAAN;AAAA,WADN;AAEPC,UAAAA,UAAU,EAAE;AAAA,mBAAM,oBAAC,eAAD;AAAiB,cAAA,IAAI,EAAE,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN;AAAA,WAFL;AAGPC,UAAAA,WAAW,EAAE;AAAA,mBACX,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEC,gBAAAA,aAAa,EAAE;AAAjB,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,eAAD;AACE,cAAA,QAAQ,EAAE,eADZ;AAEE,cAAA,IAAI,EAAE,WAFR;AAGE,cAAA,OAAO,EAAE;AAAA,uBAAM,KAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,UAA/B,CAAN;AAAA,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAME,oBAAC,eAAD;AACE,cAAA,QAAQ,EAAE,eADZ;AAEE,cAAA,IAAI,EAAE,OAFR;AAGE,cAAA,OAAO,EAAE;AAAA,uBAAM,KAAI,CAACF,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,UAA/B,CAAN;AAAA,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EAWE,oBAAC,eAAD;AACE,cAAA,QAAQ,EAAE,eADZ;AAEE,cAAA,IAAI,EAAE,UAFR;AAGE,cAAA,OAAO,EAAE;AAAA,uBAAM,KAAI,CAACF,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,SAA/B,CAAN;AAAA,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CADW;AAAA;AAHN,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAqCE,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,SAAS,EAAEjB,aAFb;AAGE,QAAA,OAAO,EAAE;AACPW,UAAAA,WAAW,EAAE;AAAA,mBAAM,yCAAN;AAAA,WADN;AAEPC,UAAAA,UAAU,EAAE;AAAA,mBACV,oBAAC,cAAD;AACE,cAAA,QAAQ,EAAE,eADZ;AAEE,cAAA,IAAI,EAAE,YAFR;AAGE,cAAA,OAAO,EAAE;AAAA,uBAAM,KAAI,CAACG,KAAL,CAAWC,UAAX,CAAsBE,MAAtB,EAAN;AAAA,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU;AAAA;AAFL,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArCF,CADF;AAsDD;;;;EAxDyCrB,S;;SAAvBQ,c","sourcesContent":["import React, { Component } from \"react\";\nimport { View } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nimport HomeScreen from \"../../containers/home/HomeScreen\";\nimport SettingScreen from \"../../containers/home/SettingScreen\";\n\nimport {\n  HeaderRightIcon,\n  HeaderLeftTitle,\n  HeaderLeftIcon,\n} from \"../../components/Header\";\n\n/**\n * HOME -> Main네비게이션입니다.\n */\nconst Stack = createStackNavigator();\nexport default class MainNavigation extends Component {\n  render() {\n    return (\n      <Stack.Navigator\n        screenOptions={{\n          headerStyle: {\n            backgroundColor: \"transparent\",\n            elevation: 0,\n            shadowOpacity: 0,\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <Stack.Screen\n          name=\"Home\"\n          component={HomeScreen}\n          options={{\n            headerTitle: () => <></>,\n            headerLeft: () => <HeaderLeftTitle text={\"팀 리스트\"} />,\n            headerRight: () => (\n              <View style={{ flexDirection: \"row\" }}>\n                <HeaderRightIcon\n                  iconType={\"MaterialIcons\"}\n                  name={\"group-add\"}\n                  onPress={() => this.props.navigation.navigate(\"MakeTeam\")}\n                />\n                <HeaderRightIcon\n                  iconType={\"MaterialIcons\"}\n                  name={\"email\"}\n                  onPress={() => this.props.navigation.navigate(\"JoinTeam\")}\n                />\n                <HeaderRightIcon\n                  iconType={\"MaterialIcons\"}\n                  name={\"settings\"}\n                  onPress={() => this.props.navigation.navigate(\"Setting\")}\n                />\n              </View>\n            ),\n          }}\n        />\n        <Stack.Screen\n          name=\"Setting\"\n          component={SettingScreen}\n          options={{\n            headerTitle: () => <></>,\n            headerLeft: () => (\n              <HeaderLeftIcon\n                iconType={\"MaterialIcons\"}\n                name={\"arrow-back\"}\n                onPress={() => this.props.navigation.goBack()}\n              />\n            ),\n          }}\n        />\n      </Stack.Navigator>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}