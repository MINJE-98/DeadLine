{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/minje/Desktop/DeadLine/screen/SettingScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport firebase from 'firebase';\n\nvar SettingScreen = function (_React$Component) {\n  _inherits(SettingScreen, _React$Component);\n\n  var _super = _createSuper(SettingScreen);\n\n  function SettingScreen() {\n    var _this;\n\n    _classCallCheck(this, SettingScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      Team: null,\n      TeamUid: null,\n      Loading: true\n    };\n    return _this;\n  }\n\n  _createClass(SettingScreen, [{\n    key: \"getUserInfo\",\n    value: function getUserInfo() {\n      return firebase.auth().currentUser;\n    }\n  }, {\n    key: \"Loading\",\n    value: function Loading() {\n      if (this.state.Loading) {\n        this.getTeam();\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 7\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: 'large',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 9\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        style: styles.safearea,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 5\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, this.getUserInfo().photoURL == null ? React.createElement(Image, {\n        style: styles.profile,\n        source: require(\"../no-image.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }) : React.createElement(Image, {\n        style: styles.profile,\n        source: {\n          uri: this.getUserInfo().photoURL\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, this.getUserInfo().email), React.createElement(Button, {\n        title: \"\\uB85C\\uADF8\\uC544\\uC6C3\",\n        onPress: function onPress() {\n          return firebase.auth().signOut();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return SettingScreen;\n}(React.Component);\n\nexport default SettingScreen;\nvar styles = StyleSheet.create({\n  safearea: {\n    height: '100%',\n    width: '100%'\n  },\n  main: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  profile: {\n    width: 100,\n    height: 100,\n    borderRadius: 100\n  }\n});","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine/screen/SettingScreen.js"],"names":["React","Icon","TouchableOpacity","firebase","SettingScreen","state","Team","TeamUid","Loading","auth","currentUser","getTeam","styles","safearea","main","getUserInfo","photoURL","profile","require","uri","email","signOut","Component","StyleSheet","create","height","width","flex","justifyContent","alignItems","borderRadius"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;;;AAEA,OAAQC,IAAR;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;IAEMC,a;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAACC,MAAAA,IAAI,EAAE,IAAP;AAAaC,MAAAA,OAAO,EAAE,IAAtB;AAA4BC,MAAAA,OAAO,EAAE;AAArC,K;;;;;;kCAEK;AAAC,aAAOL,QAAQ,CAACM,IAAT,GAAgBC,WAAvB;AAAoC;;;8BAEzC;AACP,UAAI,KAAKL,KAAL,CAAWG,OAAf,EAAwB;AACtB,aAAKG,OAAL;AACF,eACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,iBAAD;AAAmB,UAAA,IAAI,EAAE,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD;AACF;;;6BACO;AACN,aACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEC,MAAM,CAACC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKC,WAAL,GAAmBC,QAAnB,IAA+B,IAA/B,GACC,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEJ,MAAM,CAACK,OAArB;AAA8B,QAAA,MAAM,EAAEC,OAAO,mBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAEC,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEN,MAAM,CAACK,OAArB;AAA8B,QAAA,MAAM,EAAE;AAACE,UAAAA,GAAG,EAAE,KAAKJ,WAAL,GAAmBC;AAAzB,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKD,WAAL,GAAmBK,KAA1B,CAJA,EAKA,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,0BAAd;AAAqB,QAAA,OAAO,EAAE;AAAA,iBAAMjB,QAAQ,CAACM,IAAT,GAAgBY,OAAhB,EAAN;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALA,CADJ,CADF,CADF;AAcD;;;;EA9B2BrB,KAAK,CAACsB,S;;AAkClC,eAAelB,aAAf;AAEA,IAAMQ,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,QAAQ,EAAC;AACPY,IAAAA,MAAM,EAAC,MADA;AAEPC,IAAAA,KAAK,EAAC;AAFC,GADsB;AAK/BZ,EAAAA,IAAI,EAAC;AACDa,IAAAA,IAAI,EAAE,CADL;AAEDC,IAAAA,cAAc,EAAE,QAFf;AAGDC,IAAAA,UAAU,EAAE;AAHX,GAL0B;AAU/BZ,EAAAA,OAAO,EAAC;AACNS,IAAAA,KAAK,EAAE,GADD;AAEND,IAAAA,MAAM,EAAE,GAFF;AAGNK,IAAAA,YAAY,EAAE;AAHR;AAVuB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Button, View, StyleSheet, Text, Image, SafeAreaView, ScrollView, ActivityIndicator } from 'react-native';\nimport  Icon  from 'react-native-vector-icons/Ionicons'\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport firebase from 'firebase';\n\nclass SettingScreen extends React.Component {\n  state = {Team: null, TeamUid: null, Loading: true};\n  \n  getUserInfo(){return firebase.auth().currentUser;}\n\n  Loading(){\n    if (this.state.Loading) {\n      this.getTeam();\n    return (\n      <View>\n        <ActivityIndicator size={'large'} />\n      </View>\n    );\n  }\n}\nrender(){\n  return (\n    <SafeAreaView style={styles.safearea}>\n      <ScrollView>\n        { <View style={styles.main}>\n          {this.getUserInfo().photoURL == null \n          ? <Image style={styles.profile} source={require('../no-image.png')}/> \n          : <Image style={styles.profile} source={{uri: this.getUserInfo().photoURL}}/>}\n          <Text>{this.getUserInfo().email}</Text>\n          <Button title=\"로그아웃\" onPress={() => firebase.auth().signOut()} />\n        </View>\n        }\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\n}\n\nexport default SettingScreen;\n\nconst styles = StyleSheet.create({\n  safearea:{\n    height:'100%',\n    width:'100%',\n  },\n  main:{\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n  },\n  profile:{\n    width: 100,\n    height: 100,\n    borderRadius: 100\n  },\n})"]},"metadata":{},"sourceType":"module"}