{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/minje/Desktop/DeadLine-client/src/components/Loading.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { loading } from \"../styles/light/styles\";\n\nvar LoadingScreen = function (_React$Component) {\n  _inherits(LoadingScreen, _React$Component);\n\n  var _super = _createSuper(LoadingScreen);\n\n  function LoadingScreen() {\n    _classCallCheck(this, LoadingScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoadingScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, {\n        animationType: this.props.aniType,\n        transparent: true,\n        visible: this.props.visible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: loading.defaultStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: \"#000\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return LoadingScreen;\n}(React.Component);\n\nexport { LoadingScreen as default };","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine-client/src/components/Loading.js"],"names":["React","loading","LoadingScreen","props","aniType","visible","defaultStyle","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,OAAT;;IAEqBC,a;;;;;;;;;;;;;WACnB,kBAAS;AACP,aACE,oBAAC,KAAD;AACA,QAAA,aAAa,EAAE,KAAKC,KAAL,CAAWC,OAD1B;AACmC,QAAA,WAAW,EAAE,IADhD;AACsD,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAD1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,OAAO,CAACK,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,KAAK,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHF,CADF;AASD;;;;EAXwCN,KAAK,CAACO,S;;SAA5BL,a","sourcesContent":["import React from \"react\";\nimport { View, ActivityIndicator, Modal } from \"react-native\";\nimport { loading } from \"../styles/light/styles\";\n\nexport default class LoadingScreen extends React.Component {\n  render() {\n    return (\n      <Modal\n      animationType={this.props.aniType} transparent={true} visible={this.props.visible}\n      >\n        <View style={loading.defaultStyle}>\n          <ActivityIndicator size=\"large\" color=\"#000\" />\n        </View>\n      </Modal>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}