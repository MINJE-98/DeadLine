{"ast":null,"code":"var _jsxFileName = \"/Users/minje/Desktop/DeadLine-client/src/components/Deadline.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Inputbox from \"./InputBox\";\nimport { deadlinestyles } from \"../styles/light/styles\";\nvar screen = Dimensions.get(\"screen\");\nexport default function Deadline(props) {\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"column\",\n      padding: 30,\n      width: \"100%\",\n      height: screen.height / 3,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, props.ImageSelector(), React.createElement(View, {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: deadlinestyles.barcodeText,\n    onPress: function onPress() {\n      return alert(props.Barcode);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, props.Barcode))), React.createElement(View, {\n    style: {\n      flexDirection: \"column\",\n      width: \"100%\",\n      height: Platform.OS === \"ios\" ? screen.height / 2.14 : screen.height / 2.4,\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(Inputbox, {\n    IconName: \"shopping-cart\",\n    Inputbox: props.InputProdName(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: [deadlinestyles.defaultFont, {\n      textAlign: \"left\",\n      width: \"80%\",\n      paddingTop: 20,\n      fontSize: 15\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"\\uC720\\uD1B5\\uAE30\\uD55C\"), React.createElement(Inputbox, {\n    IconName: \"calendar\",\n    Inputbox: props.InputDateMask(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), React.createElement(Inputbox, {\n    IconName: \"tag\",\n    Inputbox: React.createElement(Text, {\n      style: deadlinestyles.defaultFont,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"\\uC720\\uC81C\\uD488\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, props.AddProd()));\n}","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine-client/src/components/Deadline.js"],"names":["React","Inputbox","deadlinestyles","screen","Dimensions","get","Deadline","props","flexDirection","padding","width","height","alignItems","justifyContent","ImageSelector","barcodeText","alert","Barcode","Platform","OS","InputProdName","defaultFont","textAlign","paddingTop","fontSize","InputDateMask","AddProd"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,QAAP;AACA,SAASC,cAAT;AACA,IAAMC,MAAM,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAf;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,aAAa,EAAE,QADV;AAELC,MAAAA,OAAO,EAAE,EAFJ;AAGLC,MAAAA,KAAK,EAAE,MAHF;AAILC,MAAAA,MAAM,EAAER,MAAM,CAACQ,MAAP,GAAgB,CAJnB;AAKLC,MAAAA,UAAU,EAAE,QALP;AAMLC,MAAAA,cAAc,EAAE;AANX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGN,KAAK,CAACO,aAAN,EAVH,EAWE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEL,MAAAA,OAAO,EAAE;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEP,cAAc,CAACa,WADxB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMC,KAAK,CAACT,KAAK,CAACU,OAAP,CAAX;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGV,KAAK,CAACU,OAJT,CADF,CAXF,CAFF,EAuBE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLT,MAAAA,aAAa,EAAE,QADV;AAELE,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,MAAM,EAAGO,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwBhB,MAAM,CAACQ,MAAP,GAAgB,IAAxC,GAA+CR,MAAM,CAACQ,MAAP,GAAgB,GAHnE;AAILC,MAAAA,UAAU,EAAE;AAJP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,eAApB;AAAqC,IAAA,QAAQ,EAAEL,KAAK,CAACa,aAAN,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLlB,cAAc,CAACmB,WADV,EAEL;AACEC,MAAAA,SAAS,EAAE,MADb;AAEEZ,MAAAA,KAAK,EAAE,KAFT;AAGEa,MAAAA,UAAU,EAAE,EAHd;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCATF,EAsBE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,UAApB;AAAgC,IAAA,QAAQ,EAAEjB,KAAK,CAACkB,aAAN,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,EAuBE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAE,KADZ;AAEE,IAAA,QAAQ,EAAE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEvB,cAAc,CAACmB,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,CAvBF,EAyDE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOd,KAAK,CAACmB,OAAN,EAAP,CAzDF,CADF;AA8DD","sourcesContent":["import React from \"react\";\nimport { View, Text, Dimensions} from \"react-native\";\nimport Inputbox from \"./InputBox\";\nimport { deadlinestyles } from \"../styles/light/styles\";\nconst screen = Dimensions.get(\"screen\");\nexport default function Deadline(props) {\n  return (\n    <View>\n      {/** TOP  */}\n      <View\n        style={{\n          flexDirection: \"column\",\n          padding: 30,\n          width: \"100%\",\n          height: screen.height / 3,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {props.ImageSelector()}\n        <View style={{ padding: 10 }}>\n          <Text\n            style={deadlinestyles.barcodeText}\n            onPress={() => alert(props.Barcode)}\n          >\n            {props.Barcode}\n          </Text>\n        </View>\n      </View>\n      {/** MID */}\n      <View\n        style={{\n          flexDirection: \"column\",\n          width: \"100%\",\n          height:  Platform.OS === \"ios\" ? screen.height / 2.14 : screen.height / 2.4 ,\n          alignItems: \"center\",\n        }}\n      >\n        <Inputbox IconName={\"shopping-cart\"} Inputbox={props.InputProdName()} />\n        <Text\n          style={[\n            deadlinestyles.defaultFont,\n            {\n              textAlign: \"left\",\n              width: \"80%\",\n              paddingTop: 20,\n              fontSize: 15,\n            },\n          ]}\n        >\n          유통기한\n        </Text>\n        <Inputbox IconName={\"calendar\"} Inputbox={props.InputDateMask()} />\n        <Inputbox\n          IconName={\"tag\"}\n          Inputbox={<Text style={deadlinestyles.defaultFont}>유제품</Text>}\n        />\n      </View>\n      {/* \n        BOT \n        TODO: \n        1. 상품 정보가 수정되었거나, 새로운 등록일 경우\n        2. 유통기한 등록\n      */}\n      <View>{props.AddProd()}</View>\n      {/* <Loading animationType={\"none\"} visible={props.modalVisible} /> */}\n    </View>\n  );\n}\n\n/*\nif (prodname == \"\") Alert.alert(\"\", \"상품 이름을 입력해주세요.\");\n              else {\n                Alert.alert(\"\", \"추가 하시겠습니까?\", [\n                  { text: \"취소\", style: \"cancel\" },\n                  {\n                    text: \"확인\",\n                    onPress: async () => {\n                      try {\n                        alert(\n                          prodname + \" \" + prodbarcode + \" \" + prodimageURL\n                        );\n                        await api.set_item(\n                          token,\n                          prodbarcode,\n                          prodname,\n                          selected_team.tuid\n                        );\n                      } catch (error) {\n                        if (error.response) {\n                          if (error.response.data.error_code == \"1006\")\n                            Alert.alert(\"\", error.response.message);\n                          // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n                          if (error.response.status === 404) {\n                          } else {\n                            Alert.alert(\"40*에러\", error.response.message);\n                          }\n                        } else if (error.request) {\n                          // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n                          Alert.alert(\"통신을 실패\", \"통신 실패하였습니다.\");\n                        } else {\n                          // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n                          console.log(\"Error\", error.message);\n                        }\n                      }\n                    },\n                  },\n                ]);\n              }\n */\n"]},"metadata":{},"sourceType":"module"}