{"ast":null,"code":"import axios from 'axios';\nimport { config } from \"../config/ApiURL\";\nexport var get_user = function get_user(token) {\n  return axios.get(config.API_URL + \"/api/auth\", {\n    headers: {\n      token: token\n    }\n  });\n};\nexport var set_user = function set_user(token) {\n  return axios.post(config.API_URL + \"/api/auth\", {}, {\n    headers: {\n      token: token\n    }\n  });\n};\nexport var set_team = function set_team(token, teamuid, teamname) {\n  return axios.post(config.API_URL + \"/api/teams?teamuid=\" + teamuid + \"&teamname=\" + teamname, {}, {\n    headers: {\n      token: token\n    }\n  });\n};\nexport var join_team = function join_team(token, teamuid, state) {\n  return axios.post(config.API_URL + \"/api/teams/members?teamuid=\" + teamuid + \"&state=\" + state, {}, {\n    headers: {\n      token: token\n    }\n  });\n};\nexport var get_user_teamlist = function get_user_teamlist(token) {\n  return axios.get(config.API_URL + \"/api/teams/members/teamlist\", {\n    headers: {\n      token: token\n    }\n  });\n};\nexport var get_item = function get_item(token, barcode, teamuid) {\n  console.log(config.API_URL + \"/api/items?barcode=\" + barcode + \"&teamuid=\" + teamuid);\n  return axios.get(config.API_URL + \"/api/items?barcode=\" + barcode + \"&teamuid=\" + teamuid, {\n    headers: {\n      token: token\n    }\n  });\n};\nexport var get_itemlist = function get_itemlist(token, barcode) {\n  return axios.get(config.API_URL + \"/api/items/list?barcode=\" + barcode, {\n    headers: {\n      token: token\n    }\n  });\n};\nexport var set_item = function set_item(token, barcode, prodname, teamuid) {\n  return axios.post(config.API_URL + \"/api/items?barcode=\" + barcode + \"&prodname=\" + prodname + \"&teamuid=\" + teamuid, {}, {\n    headers: {\n      token: token\n    }\n  });\n};\nexport var set_deladine = function set_deladine(token, teamuid, goodsid, expdate) {\n  return axios.post(config.API_URL + \"/api/deadline?teamuid=\" + teamuid + \"&goodsid=\" + goodsid + \"&expdate=\" + expdate, {}, {\n    headers: {\n      token: token\n    }\n  });\n};","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine-client/src/api/Api.js"],"names":["axios","config","get_user","token","get","API_URL","headers","set_user","post","set_team","teamuid","teamname","join_team","state","get_user_teamlist","get_item","barcode","console","log","get_itemlist","set_item","prodname","set_deladine","goodsid","expdate"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { config } from '../config/ApiURL'\n\n// 유저 정보를 가져옵니다.\n// GET /api/auth\n// headers: token\n// params: null\nexport const get_user = ( token ) =>{\n    return axios.get(`${config.API_URL}/api/auth`,{\n        headers:{\n            token: token\n        }\n    });\n}\n// 유저 정보를 저장합니다.\n// POST /api/auth\n// headers: token\n// params: null\nexport const set_user = ( token ) =>{\n    return axios.post(`${config.API_URL}/api/auth`,{},{\n        headers:{\n            token: token\n        }\n    });\n}\n\n// 팀을 생성합니다.\n// POST /api/teams\n// headers: token\n// params: teamuid, teamname\nexport const set_team = (token, teamuid, teamname) =>{\n    return axios.post(`${config.API_URL}/api/teams?teamuid=${teamuid}&teamname=${teamname}`,{},{\n        headers:{\n            token: token\n        }}\n    );\n}\n\n// POST /api/teams/members?teamuid={temauid}&state={state}\n// 팀에 가입합니다.\n// headers: token\n// params: teamuid, state\nexport const join_team = (token, teamuid, state) =>{\n    return axios.post(`${config.API_URL}/api/teams/members?teamuid=${teamuid}&state=${state}`,{},{\n        headers:{\n            token: token\n        }}\n    );\n}\n// GET /api/teams/members/teamlist\n// 한 유저가 가입한 팀리스트를 가져옵니다.\n// headers: token\nexport const get_user_teamlist = (token) =>{\n    return axios.get(`${config.API_URL}/api/teams/members/teamlist`,{\n        headers: {\n            token: token\n        }\n    });\n}\n\n// GET /api/items?barcode={barcode}&teamuid={teamuid}\n// 팀에 상품에 있는지 확인합니다.\n// headers: token\n// params: barcode, teamuid\nexport const get_item = (token, barcode, teamuid) =>{\n    console.log(`${config.API_URL}/api/items?barcode=${barcode}&teamuid=${teamuid}`);\n    return axios.get(`${config.API_URL}/api/items?barcode=${barcode}&teamuid=${teamuid}`,{\n        headers: {\n            token: token\n        }\n    });\n}\n\n// GET /api/items/list?barcode={barcode}\n// 상품 정보 리스트를 전부 받아옵니다.\n// headers: token\n// params: barcode\nexport const get_itemlist = (token, barcode) =>{\n    return axios.get(`${config.API_URL}/api/items/list?barcode=${barcode}`,{\n        headers: {\n            token: token\n        }\n    });\n}\n\n// POST /api/items?barcode={barcode}&prodname={prodname}&teamuid={teamuid}\n// 아이템 생성\n// headers: token\n// params: barcode, prodname, teamuid\nexport const set_item = (token, barcode, prodname, teamuid) =>{\n    return axios.post(`${config.API_URL}/api/items?barcode=${barcode}&prodname=${prodname}&teamuid=${teamuid}`,{},{\n        headers:{\n            token: token\n        }}\n    );\n}\n\n// POST /api/deadline?teamuid={teamuid}&goodsid={goodsid}&expdate={expdate}\n// 유통기한 생성\n// headers: token\n// params: teamuid, tagid, goodsid, expdate\n\nexport const set_deladine = (token, teamuid, goodsid, expdate) =>{\n    return axios.post(`${config.API_URL}/api/deadline?teamuid=${teamuid}&goodsid=${goodsid}&expdate=${expdate}`,{},{\n        headers:{\n            token: token\n        }}\n    );\n}"]},"metadata":{},"sourceType":"module"}