{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/minje/Desktop/DeadLine/screen/TeamMakeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport Dialog from \"react-native-dialog\";\nimport firebase from 'firebase';\n\nvar TeamScreen = function (_React$Component) {\n  _inherits(TeamScreen, _React$Component);\n\n  var _super = _createSuper(TeamScreen);\n\n  function TeamScreen() {\n    var _this;\n\n    _classCallCheck(this, TeamScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      TeamName: null\n    };\n\n    _this.getDB = function () {\n      return firebase.database();\n    };\n\n    _this.getUserInfo = function () {\n      return firebase.auth().currentUser;\n    };\n\n    _this.MakeTeam = function () {\n      var TeamUid = Date.now();\n\n      _this.getDB().ref('/Teams/' + TeamUid).set({\n        TeamName: _this.state.TeamName\n      });\n\n      _this.getDB().ref('/Teams/' + TeamUid + '/TeamMembers/' + _this.getUserInfo().uid).set({\n        Rank: 'Admin'\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TeamScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 8\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"\\uD300 \\uC774\\uB984 \\uC785\\uB825\",\n        onChangeText: function onChangeText(teamname) {\n          return _this2.setState({\n            TeamName: teamname\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 10\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 10\n        }\n      }, \"\\uCD08\\uB300\\uD560 \\uCE5C\\uAD6C \\uC804\\uD654\\uBC88\\uD638/\\uCE74\\uD1A1\"), React.createElement(Text, {\n        onPress: function onPress() {\n          _this2.MakeTeam();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 10\n        }\n      }, \"\\uC0DD\\uC131\"));\n    }\n  }]);\n\n  return TeamScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({});\nexport default TeamScreen;","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine/screen/TeamMakeScreen.js"],"names":["React","Icon","Dialog","firebase","TeamScreen","state","TeamName","getDB","database","getUserInfo","auth","currentUser","MakeTeam","TeamUid","Date","now","ref","set","uid","Rank","teamname","setState","Component","styles","StyleSheet","create"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAEA,OAAQC,IAAR;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;;IAEMC,U;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAACC,MAAAA,QAAQ,EAAE;AAAX,K;;UAERC,K,GAAQ;AAAA,aAAMJ,QAAQ,CAACK,QAAT,EAAN;AAAA,K;;UACRC,W,GAAc;AAAA,aAAMN,QAAQ,CAACO,IAAT,GAAgBC,WAAtB;AAAA,K;;UAGdC,Q,GAAW,YAAK;AACd,UAAMC,OAAO,GAAGC,IAAI,CAACC,GAAL,EAAhB;;AACA,YAAKR,KAAL,GAAaS,GAAb,CAAiB,YAAYH,OAA7B,EAAsCI,GAAtC,CAA0C;AACxCX,QAAAA,QAAQ,EAAE,MAAKD,KAAL,CAAWC;AADmB,OAA1C;;AAGA,YAAKC,KAAL,GAAaS,GAAb,CAAiB,YAAYH,OAAZ,GAAsB,eAAtB,GAAwC,MAAKJ,WAAL,GAAmBS,GAA5E,EAAiFD,GAAjF,CAAqF;AACnFE,QAAAA,IAAI,EAAE;AAD6E,OAArF;AAGD,K;;;;;;;6BAEO;AAAA;;AACN,aACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAC,kCAAvB;AAAiC,QAAA,YAAY,EAAE,sBAAAC,QAAQ;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAACf,YAAAA,QAAQ,EAAEc;AAAX,WAAd,CAAJ;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,mBAAI;AAAC,UAAA,MAAI,CAACR,QAAL;AAAgB,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CADH;AAOD;;;;EAzBsBZ,KAAK,CAACsB,S;;AA4B/B,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAGA,eAAerB,UAAf","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet, TextInput, Button } from 'react-native';\nimport  Icon  from 'react-native-vector-icons/Ionicons'\nimport Dialog from \"react-native-dialog\";\nimport firebase from 'firebase';\n\nclass TeamScreen extends React.Component{\n  state = {TeamName: null}\n  //유저 null 처리 해야함.\n  getDB = () => firebase.database();\n  getUserInfo = () => firebase.auth().currentUser;\n  //\n\n  MakeTeam = () =>{\n    const TeamUid = Date.now();\n    this.getDB().ref('/Teams/' + TeamUid).set({\n      TeamName: this.state.TeamName\n    })\n    this.getDB().ref('/Teams/' + TeamUid + '/TeamMembers/' + this.getUserInfo().uid).set({\n      Rank: 'Admin'\n    })\n  }\n\n  render(){\n    return (\n       <View>\n         <TextInput placeholder=\"팀 이름 입력\" onChangeText={teamname => this.setState({TeamName: teamname})}></TextInput>\n         <Text>초대할 친구 전화번호/카톡</Text>\n         <Text onPress={()=>{this.MakeTeam()}}>생성</Text>\n        </View>\n    );\n  }\n}\n  \nconst styles = StyleSheet.create({\n\n})\nexport default TeamScreen;\n"]},"metadata":{},"sourceType":"module"}