{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/minje/Desktop/DeadLine/screen/TeamMakeScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport firebase from 'firebase';\nexport default function TeamScreen(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      TeamName = _useState2[0],\n      setTeamName = _useState2[1];\n\n  var getDB = function getDB() {\n    return firebase.database();\n  };\n\n  var getUserInfo = function getUserInfo() {\n    return firebase.auth().currentUser;\n  };\n\n  var MakeTeam = function MakeTeam() {\n    return _regeneratorRuntime.async(function MakeTeam$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Alert.alert(\"팀 생성\", \"팀을 생성하시겠습니까?\", [{\n              text: \"취소\",\n              style: \"cancel\"\n            }, {\n              text: \"확인\",\n              onPress: function onPress() {\n                var TeamUid = Date.now();\n                getDB().ref('/Teams/' + TeamUid).set({\n                  TeamName: TeamName\n                });\n                getDB().ref('/Teams/' + TeamUid + '/TeamMembers/' + getUserInfo().uid).set({\n                  Rank: 'Admin'\n                });\n                props.navigation.goBack();\n              }\n            }]);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"\\uD300 \\uC774\\uB984 \\uC785\\uB825\",\n    onChangeText: function onChangeText(Text) {\n      return setTeamName(Text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"\\uCD08\\uB300\\uD560 \\uCE5C\\uAD6C \\uC804\\uD654\\uBC88\\uD638/\\uCE74\\uD1A1\"), React.createElement(Text, {\n    onPress: function onPress() {\n      MakeTeam();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"\\uC0DD\\uC131\"));\n}","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine/screen/TeamMakeScreen.js"],"names":["React","useState","useEffect","firebase","TeamScreen","props","TeamName","setTeamName","getDB","database","getUserInfo","auth","currentUser","MakeTeam","Alert","alert","text","style","onPress","TeamUid","Date","now","ref","set","uid","Rank","navigation","goBack","Text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAAA,kBACPJ,QAAQ,CAAC,IAAD,CADD;AAAA;AAAA,MAChCK,QADgC;AAAA,MACtBC,WADsB;;AAGvC,MAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,WAAML,QAAQ,CAACM,QAAT,EAAN;AAAA,GAAd;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMP,QAAQ,CAACQ,IAAT,GAAgBC,WAAtB;AAAA,GAApB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAEfC,YAAAA,KAAK,CAACC,KAAN,CAAY,MAAZ,EAAmB,cAAnB,EACA,CAAC;AAACC,cAAAA,IAAI,EAAC,IAAN;AAAYC,cAAAA,KAAK,EAAE;AAAnB,aAAD,EACA;AAACD,cAAAA,IAAI,EAAC,IAAN;AAAYE,cAAAA,OAAO,EAAE,mBAAK;AACtB,oBAAMC,OAAO,GAAGC,IAAI,CAACC,GAAL,EAAhB;AACAb,gBAAAA,KAAK,GAAGc,GAAR,CAAY,YAAYH,OAAxB,EAAiCI,GAAjC,CAAqC;AACnCjB,kBAAAA,QAAQ,EAAEA;AADyB,iBAArC;AAGAE,gBAAAA,KAAK,GAAGc,GAAR,CAAY,YAAYH,OAAZ,GAAsB,eAAtB,GAAwCT,WAAW,GAAGc,GAAlE,EAAuED,GAAvE,CAA2E;AACzEE,kBAAAA,IAAI,EAAE;AADmE,iBAA3E;AAGApB,gBAAAA,KAAK,CAACqB,UAAN,CAAiBC,MAAjB;AACD;AATH,aADA,CADA;;AAFe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAkBA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,kCAAvB;AAAiC,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAIrB,WAAW,CAACqB,IAAD,CAAf;AAAA,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,mBAAI;AAACf,MAAAA,QAAQ;AAAG,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF;AAOD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View, StyleSheet, TextInput, Alert, AsyncStorage } from 'react-native';\nimport firebase from 'firebase';\n\nexport default function TeamScreen(props){\n  const [TeamName, setTeamName] = useState(null);\n\n  const getDB = () => firebase.database();\n  const getUserInfo = () => firebase.auth().currentUser;\n\n  const MakeTeam = async() =>{\n    \n    Alert.alert(\"팀 생성\",\"팀을 생성하시겠습니까?\",\n    [{text:\"취소\", style: \"cancel\"},\n    {text:\"확인\", onPress: () =>{\n        const TeamUid = Date.now();\n        getDB().ref('/Teams/' + TeamUid).set({\n          TeamName: TeamName\n        })\n        getDB().ref('/Teams/' + TeamUid + '/TeamMembers/' + getUserInfo().uid).set({\n          Rank: 'Admin'\n        })\n        props.navigation.goBack()\n      }}, \n    ])\n  }\n\n\n  return (\n    <View>\n      <TextInput placeholder=\"팀 이름 입력\" onChangeText={Text => setTeamName(Text)}></TextInput>\n      <Text>초대할 친구 전화번호/카톡</Text>\n      <Text onPress={()=>{MakeTeam()}}>생성</Text>\n     </View>\n );\n}"]},"metadata":{},"sourceType":"module"}