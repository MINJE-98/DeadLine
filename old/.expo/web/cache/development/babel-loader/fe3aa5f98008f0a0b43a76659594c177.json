{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/minje/Desktop/DeadLine/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { BottomTabBar, createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport firebase from 'firebase';\nimport { firebaseConfig } from \"./config\";\nimport SignInScreen from \"./screen/SignInScreen\";\nimport TabNavigator from \"./navigators/TabNavigator\";\nfirebase.initializeApp(firebaseConfig);\nvar tab = createBottomTabNavigator();\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      userInfo = _useState2[0],\n      setuserInfo = _useState2[1];\n\n  useEffect(function () {\n    firebase.auth().onAuthStateChanged(function (userInfo) {\n      setuserInfo(userInfo);\n    });\n  });\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(tab.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, userInfo != null ? React.createElement(React.Fragment, null, React.createElement(tab.Screen, {\n    name: \"App\",\n    component: TabNavigator,\n    options: {\n      tabBarVisible: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }\n  })) : React.createElement(React.Fragment, null, React.createElement(tab.Screen, {\n    name: \"Auth\",\n    component: SignInScreen,\n    options: {\n      tabBarVisible: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine/App.js"],"names":["React","useState","useEffect","NavigationContainer","BottomTabBar","createBottomTabNavigator","firebase","firebaseConfig","SignInScreen","TabNavigator","initializeApp","tab","App","userInfo","setuserInfo","auth","onAuthStateChanged","tabBarVisible"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,YAAT,EAAuBC,wBAAvB,QAAuD,+BAAvD;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,SAAQC,cAAR;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACAH,QAAQ,CAACI,aAAT,CAAuBH,cAAvB;AAEA,IAAMI,GAAG,GAAGN,wBAAwB,EAApC;AACA,eAAe,SAASO,GAAT,GAAc;AAAA,kBACKX,QAAQ,CAAC,IAAD,CADb;AAAA;AAAA,MACpBY,QADoB;AAAA,MACVC,WADU;;AAE3BZ,EAAAA,SAAS,CAAC,YAAI;AACZI,IAAAA,QAAQ,CAACS,IAAT,GAAgBC,kBAAhB,CAAoC,UAAAH,QAAQ,EAAG;AAC7CC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KAFD;AAGD,GAJQ,CAAT;AAKA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD,CAAK,SAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,QAAQ,IAAI,IAAZ,GACG,0CAAE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,KAAjB;AAAuB,IAAA,SAAS,EAAEJ,YAAlC;AAAgD,IAAA,OAAO,EAAE;AAACQ,MAAAA,aAAa,EAAE;AAAhB,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAF,CADH,GAEG,0CAAE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,SAAS,EAAET,YAAnC;AAAiD,IAAA,OAAO,EAAE;AAACS,MAAAA,aAAa,EAAE;AAAhB,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAF,CAHP,CADF,CADF;AAUD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { BottomTabBar, createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport firebase from 'firebase';\n\nimport {firebaseConfig} from './config'\nimport SignInScreen from './screen/SignInScreen';\nimport TabNavigator from './navigators/TabNavigator';\nfirebase.initializeApp(firebaseConfig)\n\nconst tab = createBottomTabNavigator();\nexport default function App(){\n  const [userInfo, setuserInfo] = useState(null);\n  useEffect(()=>{\n    firebase.auth().onAuthStateChanged( userInfo =>{\n      setuserInfo(userInfo);\n    })\n  })\n  return(\n    <NavigationContainer>\n      <tab.Navigator>\n        { userInfo != null \n          ? (<><tab.Screen name=\"App\" component={TabNavigator} options={{tabBarVisible: false}}/></>)\n          : (<><tab.Screen name=\"Auth\" component={SignInScreen} options={{tabBarVisible: false}}/></>)\n        }\n      </tab.Navigator>\n    </NavigationContainer>\n  )\n}"]},"metadata":{},"sourceType":"module"}