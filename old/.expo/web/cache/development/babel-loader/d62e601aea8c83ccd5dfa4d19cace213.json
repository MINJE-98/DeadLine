{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/minje/Desktop/DeadLine/screen/HomeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport Dialog from \"react-native-dialog\";\nimport firebase from 'firebase';\nimport * as connet from \"../FirebaseConnet.js\";\nimport { Item } from 'native-base';\nimport { Delete } from '@material-ui/icons';\n\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      TeamList: [],\n      Loading: true\n    };\n\n    _this.getDB = function () {\n      return firebase.database();\n    };\n\n    _this.getUserInfo = function () {\n      return firebase.auth().currentUser;\n    };\n\n    _this.getTeamName = function (TeamUid) {\n      return _this.state.TeamList[TeamUid].TeamName;\n    };\n\n    _this.showTeam = function () {\n      var TeamUid = Object.keys(_this.state.TeamList);\n      var TeamList = [];\n      TeamUid.map(function (Item) {\n        return TeamList.push({\n          key: Item\n        });\n      });\n      return TeamList;\n    };\n\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"getTeam\",\n    value: function getTeam() {\n      var _this2 = this;\n\n      this.getDB().ref('Teams').once('value').then(function (Data) {\n        var TeamUidList = Object.keys(Data.val());\n        TeamUidList.map(function (Item) {\n          return _this2.getDB().ref('Teams/' + Item + '/TeamMembers').once('value').then(function (Data) {\n            var TeamUsers = Object.keys(Data.val());\n            var result = TeamUsers.filter(function (Item) {\n              return _this2.getUserInfo().uid == Item;\n            });\n          });\n        });\n        console.log(TeamUidList);\n      });\n    }\n  }, {\n    key: \"Loading\",\n    value: function Loading() {\n      if (this.state.Loading) {\n        this.getTeam();\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 7\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: 'large',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 9\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }\n      }, console.log(this.props.name), this.state.Loading ? this.Loading() : !this.showTeam().length ? React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, \"\\uD300\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\") : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, React.createElement(FlatList, {\n        data: this.showTeam(),\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(Text, {\n            onPress: function onPress() {\n              return _this3.props.navigation.navigate('팀 정보', {\n                TeamUid: item.key\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }\n          }, _this3.getTeamName(item.key), \",\", item.key, \" \");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return HomeScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  barcode: {\n    position: 'absolute',\n    right: 0,\n    padding: 3\n  },\n  Header: {\n    position: 'absolute',\n    backgroundColor: 'gray',\n    width: '95%',\n    height: '5%',\n    top: 0,\n    borderRadius: 4,\n    margin: 10\n  },\n  team: {\n    position: 'absolute',\n    top: '40%',\n    width: 100,\n    height: 100\n  },\n  Scanner: {\n    width: 30,\n    height: 30,\n    backgroundColor: 'blue',\n    borderRadius: 1\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine/screen/HomeScreen.js"],"names":["React","Icon","Dialog","firebase","connet","Item","Delete","HomeScreen","state","TeamList","Loading","getDB","database","getUserInfo","auth","currentUser","getTeamName","TeamUid","TeamName","showTeam","Object","keys","map","push","key","ref","once","then","Data","TeamUidList","val","TeamUsers","result","filter","uid","console","log","getTeam","flex","alignItems","justifyContent","props","name","length","item","navigation","navigate","Component","styles","StyleSheet","create","barcode","position","right","padding","Header","backgroundColor","width","height","top","borderRadius","margin","team","Scanner"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet, SafeAreaView, ScrollView, Alert, ActivityIndicator, FlatList, AsyncStorage } from 'react-native';\nimport  Icon  from 'react-native-vector-icons/Ionicons'\nimport Dialog from \"react-native-dialog\";\nimport firebase from 'firebase';\nimport * as connet from '../FirebaseConnet.js'\nimport { Item } from 'native-base';\nimport { Delete } from '@material-ui/icons';\n\nclass HomeScreen extends React.Component{\n  state = { TeamList: [], Loading: true}\n  \n  getDB = () => firebase.database();\n  getUserInfo = () => firebase.auth().currentUser;\n  getTeamName = (TeamUid) => this.state.TeamList[TeamUid].TeamName\n\n  showTeam = () =>{\n    const TeamUid = Object.keys(this.state.TeamList)\n    const TeamList = []\n    TeamUid.map( Item => TeamList.push({key:Item}))\n    return TeamList\n  }\n  getTeam(){\n    this.getDB().ref('Teams').once('value').then( Data => {\n      const TeamUidList = Object.keys(Data.val())\n      TeamUidList.map(Item => \n        this.getDB().ref('Teams/' + Item + '/TeamMembers').once('value').then( Data =>{\n          const TeamUsers = Object.keys(Data.val())\n          const result = TeamUsers.filter( Item => this.getUserInfo().uid == Item)\n          \n        })\n      )\n      console.log(TeamUidList)\n    })\n      // for(const a in TeamUidList){\n      // await this.getDB().ref('Teams/' + TeamUidList[a] + '/TeamMembers').once('value')\n      //   .then( Data2 =>{\n      //     const TeamUsers = Object.keys(Data2.val())\n      //         //현재 팀의 유저들 출력\n      //         for(const b in TeamUsers){\n      //           if(this.getUserInfo().uid != TeamUsers[b]) isUser = false\n      //           else isUser = true\n      //       }\n      //       if(!isUser) delete List[TeamUidList[a]]\n      //   })\n      // }\n  }\n  // JoinTeam = () => {\n  //  this.getDB().ref('/Teams/' + this.state.TeamUid).once('value', isTeam =>{\n  //     if(isTeam.val() == null){\n  //       Alert.alert(\"에러!\",\"해당하는 UID가 없습니다.\")\n  //     }else{\n  //      this.getDB().ref('/Teams/' + this.state.TeamUid + '/TeamMembers/' + this.getUserInfo().uid).update({\n  //        Rank: this.state.Rank\n  //      })\n  //     this.setState({JoinTeamDialog: false, Loading: true})\n  //     }\n  //  })\n  // }\n  // MakeTeam = () =>{\n  //   const TeamUid = Date.now();\n  //   this.getDB().ref('/Teams/' + TeamUid).set({TeamName: this.state.TeamName})\n  //   this.setState({TeamUid: TeamUid, Rank: 'Admin', MakeTeamDialog: false, Loading: true}, ()=> this.JoinTeam())\n  // }\n  // MakeTeampopup(){\n  //   return(\n  //     <View>\n  //       <Dialog.Container visible={this.state.MakeTeamDialog}>\n  //         <Dialog.Title>팀 생성!</Dialog.Title>\n  //         <Dialog.Description>\n  //           원하는 팀 이름을 작성해주세요.\n  //         </Dialog.Description>\n  //         <Dialog.Input onChangeText={data => this.setState({TeamName: data})}/>\n  //         <Dialog.Button label=\"취소\" onPress={()=> this.setState({MakeTeamDialog: false})}/>\n  //         <Dialog.Button label=\"확인\" onPress={()=> this.MakeTeam()}/>\n  //       </Dialog.Container>\n  //     </View>\n  //   )\n  // }\n  // JoinTeampopup(){\n  //   return(\n  //     <View>\n  //       <Dialog.Container visible={this.state.JoinTeamDialog}>\n  //         <Dialog.Title>팀 가입!</Dialog.Title>\n  //         <Dialog.Description>\n  //           가입할 팀 UID를 입력해주세요.\n  //         </Dialog.Description>\n  //         <Dialog.Input onChangeText={data => this.setState({TeamUid: data})}/>\n  //         <Dialog.Button label=\"취소\" onPress={()=> this.setState({JoinTeamDialog: false})}/>\n  //         <Dialog.Button label=\"확인\" onPress={()=> this.JoinTeam()}/>\n  //       </Dialog.Container>\n  //     </View>\n  //   )\n  // }\n  Loading(){\n    if (this.state.Loading) {\n      this.getTeam();\n    return (\n      <View>\n        <ActivityIndicator size={'large'} />\n      </View>\n    );\n  }\n}\n  render(){\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        {console.log(this.props.name)}\n        { this.state.Loading ? this.Loading() \n        : !this.showTeam().length \n          ? <Text>팀이 없습니다.</Text> \n          :\n            <View>\n            <FlatList data={this.showTeam()} renderItem={({item})  => \n            <Text onPress={()=> this.props.navigation.navigate('팀 정보', {TeamUid: item.key})}>{this.getTeamName(item.key)},{item.key} </Text>} />\n            </View>\n        }\n      </View>      \n    );\n  }\n}\n  \nconst styles = StyleSheet.create({\n  barcode:{\n    position:'absolute',\n    right:0,\n    padding: 3\n  },\n  Header:{\n    position: 'absolute',\n    backgroundColor: 'gray',\n    width: '95%',\n    height: '5%',\n    top: 0,\n    borderRadius: 4,\n    margin: 10,\n\n  },\n  team:{\n    position: 'absolute',\n    top: '40%',\n    width: 100,\n    height: 100,\n  },\n  Scanner:{\n    width:30,\n    height:30,\n    backgroundColor: 'blue',\n    borderRadius:1\n  },\n})\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}