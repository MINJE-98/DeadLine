{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/minje/Desktop/DeadLine/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport firebase from 'firebase';\nimport { firebaseConfig } from \"./config\";\nimport AuthNavigator from \"./navigators/AuthNavigator\";\nimport TabNavigator from \"./navigators/TabNavigator\";\nfirebase.initializeApp(firebaseConfig);\nvar AppStack = createStackNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      userInfo: null\n    };\n\n    _this.componentDidMount = function () {\n      firebase.auth().onAuthStateChanged(function (userInfo) {\n        return _this.setState({\n          userInfo: userInfo\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, React.createElement(AppStack.Navigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, this.state.userInfo != null ? React.createElement(React.Fragment, null, React.createElement(AppStack.Screen, {\n        name: \"App\",\n        component: TabNavigator,\n        options: {\n          title: \"DeadLine\",\n          headerShown: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 18\n        }\n      })) : React.createElement(React.Fragment, null, React.createElement(AppStack.Screen, {\n        name: \"Auth\",\n        component: AuthNavigator,\n        options: {\n          title: \"DeadLine\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 18\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine/App.js"],"names":["React","NavigationContainer","createStackNavigator","firebase","firebaseConfig","AuthNavigator","TabNavigator","initializeApp","AppStack","App","state","userInfo","componentDidMount","auth","onAuthStateChanged","setState","title","headerShown","Component"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,SAAQC,cAAR;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACAH,QAAQ,CAACI,aAAT,CAAuBH,cAAvB;AAEA,IAAMI,QAAQ,GAAGN,oBAAoB,EAArC;;IAOqBO,G;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AAACC,MAAAA,QAAQ,EAAE;AAAX,K;;UACRC,iB,GAAoB,YAAK;AACvBT,MAAAA,QAAQ,CAACU,IAAT,GAAgBC,kBAAhB,CAAoC,UAAAH,QAAQ;AAAA,eAAI,MAAKI,QAAL,CAAc;AAACJ,UAAAA,QAAQ,EAAEA;AAAX,SAAd,CAAJ;AAAA,OAA5C;AACD,K;;;;;;;6BACO;AACN,aACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,CAAU,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKD,KAAL,CAAWC,QAAX,IAAuB,IAAvB,GACG,0CAAE,oBAAC,QAAD,CAAU,MAAV;AAAiB,QAAA,IAAI,EAAC,KAAtB;AAA4B,QAAA,SAAS,EAAEL,YAAvC;AAAqD,QAAA,OAAO,EAAE;AAACU,UAAAA,KAAK,EAAE,UAAR;AAAoBC,UAAAA,WAAW,EAAE;AAAjC,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAF,CADH,GAEG,0CAAE,oBAAC,QAAD,CAAU,MAAV;AAAiB,QAAA,IAAI,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAEZ,aAAxC;AAAuD,QAAA,OAAO,EAAE;AAACW,UAAAA,KAAK,EAAE;AAAR,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAF,CAHP,CADF,CADF;AAUD;;;;EAhB8BhB,KAAK,CAACkB,S;;SAAlBT,G","sourcesContent":["import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport firebase from 'firebase';\n\nimport {firebaseConfig} from './config'\nimport AuthNavigator from './navigators/AuthNavigator'; \nimport TabNavigator from './navigators/TabNavigator';\nfirebase.initializeApp(firebaseConfig)\n\nconst AppStack = createStackNavigator();\n\n// React.useEffect(()=>{\n//   firebase.auth().onAuthStateChanged( userInfo =>{\n//     setuserInfo(userInfo);\n//   })\n// })\nexport default class App extends React.Component {\n  state = {userInfo: null}\n  componentDidMount = () =>{\n    firebase.auth().onAuthStateChanged( userInfo => this.setState({userInfo: userInfo}))\n  }\n  render(){\n    return(\n      <NavigationContainer>\n        <AppStack.Navigator>\n          { this.state.userInfo != null \n            ? (<><AppStack.Screen name=\"App\" component={TabNavigator} options={{title: \"DeadLine\", headerShown: false}}/></>)\n            : (<><AppStack.Screen name=\"Auth\" component={AuthNavigator} options={{title: \"DeadLine\"}}/></>)\n          }\n        </AppStack.Navigator>\n      </NavigationContainer>\n  )\n  }\n}"]},"metadata":{},"sourceType":"module"}