{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport firebase from 'firebase';\nexport var FirebaseConnet = function (_React$Component) {\n  _inherits(FirebaseConnet, _React$Component);\n\n  var _super = _createSuper(FirebaseConnet);\n\n  function FirebaseConnet() {\n    var _this;\n\n    _classCallCheck(this, FirebaseConnet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getDB = function () {\n      return firebase.database();\n    };\n\n    _this.getUserInfo = function () {\n      return firebase.auth().currentUser;\n    };\n\n    _this.getTeamName = function (TeamUid) {\n      return _this.state.TeamList[TeamUid].TeamName;\n    };\n\n    return _this;\n  }\n\n  return FirebaseConnet;\n}(React.Component);","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine/FirebaseConnet.js"],"names":["React","firebase","FirebaseConnet","getDB","database","getUserInfo","auth","currentUser","getTeamName","TeamUid","state","TeamList","TeamName","Component"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,WAAaC,cAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UAEIC,KAFJ,GAEY;AAAA,aAAMF,QAAQ,CAACG,QAAT,EAAN;AAAA,KAFZ;;AAAA,UAGIC,WAHJ,GAGkB;AAAA,aAAMJ,QAAQ,CAACK,IAAT,GAAgBC,WAAtB;AAAA,KAHlB;;AAAA,UAIIC,WAJJ,GAIkB,UAACC,OAAD;AAAA,aAAa,MAAKC,KAAL,CAAWC,QAAX,CAAoBF,OAApB,EAA6BG,QAA1C;AAAA,KAJlB;;AAAA;AAAA;;AAAA;AAAA,EAAoCZ,KAAK,CAACa,SAA1C","sourcesContent":["import * as React from 'react';\nimport firebase from 'firebase';\n\nexport class FirebaseConnet extends React.Component{\n\n    getDB = () => firebase.database();\n    getUserInfo = () => firebase.auth().currentUser;\n    getTeamName = (TeamUid) => this.state.TeamList[TeamUid].TeamName\n    \n}"]},"metadata":{},"sourceType":"module"}