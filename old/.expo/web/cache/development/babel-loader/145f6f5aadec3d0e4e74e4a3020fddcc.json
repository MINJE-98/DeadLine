{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/minje/Desktop/DeadLine-client/src/components/Showactionsheet.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, createRef } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { connectActionSheet } from '@expo/react-native-action-sheet';\nimport { deadlinestyles } from \"../styles/light/styles\";\nvar screen = Dimensions.get(\"screen\");\n\nvar ShowActionSheet = function (_Component) {\n  _inherits(ShowActionSheet, _Component);\n\n  var _super = _createSuper(ShowActionSheet);\n\n  function ShowActionSheet() {\n    var _this;\n\n    _classCallCheck(this, ShowActionSheet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._anchorRef = createRef();\n\n    _this._onOpenActionSheet = function () {\n      var options = ['이미지 가져오기', '직접 촬영하기', '취소'];\n      var destructiveButtonIndex = null;\n      var cancelButtonIndex = 2;\n\n      _this.props.showActionSheetWithOptions({\n        options: options,\n        cancelButtonIndex: cancelButtonIndex,\n        destructiveButtonIndex: destructiveButtonIndex\n      }, function (buttonIndex) {});\n    };\n\n    return _this;\n  }\n\n  _createClass(ShowActionSheet, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableOpacity, {\n        style: [deadlinestyles.imageButton, {\n          width: screen.width > 380 ? 170 : 140,\n          height: screen.width > 380 ? 170 : 140\n        }],\n        onPress: this._onOpenActionSheet,\n        ref: this._anchorRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, !this.props.result ? React.createElement(Image, {\n        style: deadlinestyles.image,\n        source: require(\"../../assets/no-image.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 12\n        }\n      }) : React.createElement(Image, {\n        style: deadlinestyles.image,\n        source: {\n          uri: this.props.result.imageURL\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n\n  return ShowActionSheet;\n}(Component);\n\nvar ImageSelector = connectActionSheet(ShowActionSheet);\nexport default ImageSelector;","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine-client/src/components/Showactionsheet.js"],"names":["React","Component","createRef","connectActionSheet","deadlinestyles","screen","Dimensions","get","ShowActionSheet","_anchorRef","_onOpenActionSheet","options","destructiveButtonIndex","cancelButtonIndex","props","showActionSheetWithOptions","buttonIndex","imageButton","width","height","result","image","require","uri","imageURL","ImageSelector"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;;;;AAEA,SAASC,kBAAT,QAAmC,iCAAnC;AACA,SAASC,cAAT;AACA,IAAMC,MAAM,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAf;;IAEMC,e;;;;;;;;;;;;;;;UACFC,U,GAAaP,SAAS,E;;UACtBQ,kB,GAAqB,YAAM;AAEvB,UAAMC,OAAO,GAAG,CAAC,UAAD,EAAa,SAAb,EAAwB,IAAxB,CAAhB;AACA,UAAMC,sBAAsB,GAAG,IAA/B;AACA,UAAMC,iBAAiB,GAAG,CAA1B;;AAEA,YAAKC,KAAL,CAAWC,0BAAX,CACE;AACEJ,QAAAA,OAAO,EAAPA,OADF;AAEEE,QAAAA,iBAAiB,EAAjBA,iBAFF;AAGED,QAAAA,sBAAsB,EAAtBA;AAHF,OADF,EAME,UAAAI,WAAW,EAAI,CAEd,CARH;AAUD,K;;;;;;;WACH,kBAAQ;AACJ,aACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE,CAACZ,cAAc,CAACa,WAAhB,EAA6B;AAAEC,UAAAA,KAAK,EAAEb,MAAM,CAACa,KAAP,GAAe,GAAf,GAAqB,GAArB,GAA2B,GAApC;AAA0CC,UAAAA,MAAM,EAAEd,MAAM,CAACa,KAAP,GAAe,GAAf,GAAqB,GAArB,GAA2B;AAA7E,SAA7B,CAAzB;AAA2I,QAAA,OAAO,EAAE,KAAKR,kBAAzJ;AAA6K,QAAA,GAAG,EAAE,KAAKD,UAAvL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,CAAC,KAAKK,KAAL,CAAWM,MAAZ,GAED,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEhB,cAAc,CAACiB,KAA7B;AAAoC,QAAA,MAAM,EAAEC,OAAO,6BAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFC,GAID,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAElB,cAAc,CAACiB,KAA7B;AAAoC,QAAA,MAAM,EAAE;AAACE,UAAAA,GAAG,EAAE,KAAKT,KAAL,CAAWM,MAAX,CAAkBI;AAAxB,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALC,CADJ;AAWH;;;;EA/ByBvB,S;;AAiC9B,IAAMwB,aAAa,GAAGtB,kBAAkB,CAACK,eAAD,CAAxC;AAEA,eAAeiB,aAAf","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport { TouchableOpacity, Image, Dimensions } from 'react-native';\nimport { connectActionSheet } from '@expo/react-native-action-sheet';\nimport { deadlinestyles } from \"../styles/light/styles\";\nconst screen = Dimensions.get(\"screen\");\n\nclass ShowActionSheet extends Component{\n    _anchorRef = createRef();\n    _onOpenActionSheet = () => {\n        // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n        const options = ['이미지 가져오기', '직접 촬영하기', '취소'];\n        const destructiveButtonIndex = null;\n        const cancelButtonIndex = 2;\n      \n        this.props.showActionSheetWithOptions(\n          {\n            options,\n            cancelButtonIndex,\n            destructiveButtonIndex,\n          },\n          buttonIndex => {\n            // Do something here depending on the button index selected\n          },\n        );\n      };\n    render(){\n        return(\n            <TouchableOpacity style={[deadlinestyles.imageButton, { width: screen.width > 380 ? 170 : 140 , height: screen.width > 380 ? 170 : 140 }]} onPress={this._onOpenActionSheet} ref={this._anchorRef}>\n           {!this.props.result\n           ?\n           <Image style={deadlinestyles.image} source={require('../../assets/no-image.png')}/> \n           :\n           <Image style={deadlinestyles.image} source={{uri: this.props.result.imageURL}}/>\n           }\n           \n         </TouchableOpacity>\n        );\n    }\n}\nconst ImageSelector = connectActionSheet(ShowActionSheet);\n\nexport default ImageSelector\n"]},"metadata":{},"sourceType":"module"}