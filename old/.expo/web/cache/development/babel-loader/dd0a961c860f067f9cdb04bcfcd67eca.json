{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/minje/Desktop/DeadLine-client/src/containers/teaminfo/deadline/DeadlineScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ActionSheetProvider } from \"@expo/react-native-action-sheet\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TextInputMask } from \"react-native-masked-text\";\nimport { total_search_item } from \"../../../redux/actions/ItemsAction\";\nimport _ImageSelector from \"../../../components/Showactionsheet\";\nimport Deadline from \"../../../components/Deadline\";\nimport { deadlinestyles } from \"../../../styles/light/styles\";\nimport * as api from \"../../../api/Api\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport default function ScanScreen(_ref) {\n  var _this = this;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var now = new Date();\n  var dispatch = useDispatch();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      prodname = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      prodbarcode = _useState4[0],\n      setBrocde = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      prodimageURL = _useState6[0],\n      setImageURL = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalVisible = _useState8[0],\n      setModalVisible = _useState8[1];\n\n  var _useState9 = useState(now.getFullYear() + \"-\" + (\"0\" + (1 + now.getMonth())).slice(-2) + \"-\" + (\"0\" + now.getDate()).slice(-2)),\n      _useState10 = _slicedToArray(_useState9, 2),\n      date = _useState10[0],\n      setdate = _useState10[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.AuthReducer;\n  }),\n      token = _useSelector.token;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.TeamInfoRducer;\n  }),\n      selected_team = _useSelector2.selected_team;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.ItemsReducer;\n  }),\n      iteminfo = _useSelector3.iteminfo;\n\n  var totalSearchItem = function totalSearchItem(token, barcode) {\n    return dispatch(total_search_item(token, barcode));\n  };\n\n  useEffect(function () {\n    setBrocde(route.params.barcode);\n    console.log(iteminfo);\n\n    if (!iteminfo) {\n      totalSearchItem(token, route.params.barcode).then(function () {\n        return navigation.navigate(\"Itemlist\");\n      });\n    } else {\n      setImageURL(iteminfo.imageURL);\n      setName(iteminfo.name);\n    }\n  }, []);\n  return React.createElement(ActionSheetProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(Deadline, {\n    ImageSelector: function ImageSelector() {\n      return React.createElement(_ImageSelector, {\n        result: prodimageURL,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 30\n        }\n      });\n    },\n    Barcode: prodbarcode,\n    InputDateMask: function InputDateMask() {\n      return React.createElement(TextInputMask, {\n        style: [deadlinestyles.defaultFont, {\n          fontSize: 18\n        }],\n        type: \"datetime\",\n        options: {\n          format: \"YYYY-MM-DD\"\n        },\n        placeholder: now.getFullYear() + \"-\" + (\"0\" + (1 + now.getMonth())).slice(-2) + \"-\" + (\"0\" + now.getDate()).slice(-2),\n        value: date,\n        onChangeText: function onChangeText(text) {\n          setdate(text);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      });\n    },\n    InputProdName: function InputProdName() {\n      return React.createElement(TextInput, {\n        style: [deadlinestyles.defaultFont, {\n          width: 300,\n          overflow: \"scroll\"\n        }],\n        placeholder: \"\\uC81C\\uD488\\uBA85\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        onChangeText: function onChangeText(Text) {\n          return setName(Text);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, prodname);\n    },\n    AddProd: function AddProd() {\n      return React.createElement(TouchableOpacity, {\n        style: deadlinestyles.confirmButton,\n        onPress: function onPress() {\n          Alert.alert(\"\", \"유통기한을 등록하시겠습니까?\", [{\n            text: \"취소\",\n            style: \"cancel\"\n          }, {\n            text: \"확인\",\n            onPress: function onPress() {\n              var result;\n              return _regeneratorRuntime.async(function onPress$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.prev = 0;\n                      _context.next = 3;\n                      return _regeneratorRuntime.awrap(api.set_deladine(token, selected_team.tuid, iteminfo.goodsid, date));\n\n                    case 3:\n                      result = _context.sent;\n                      if (result.data.error_code == \"0013\") Alert.alert(\"\", \"유통기한을 등록하였습니다.\", [{\n                        text: \"확인\",\n                        onPress: function onPress() {\n                          return navigation.navigate(\"ScanScreen\");\n                        }\n                      }]);\n                      _context.next = 10;\n                      break;\n\n                    case 7:\n                      _context.prev = 7;\n                      _context.t0 = _context[\"catch\"](0);\n\n                      if (_context.t0.response) {\n                        if (_context.t0.response.status === 404) {} else {\n                          console.log(_context.t0.response);\n                          Alert.alert(\"40*에러\", _context.t0.response.message);\n                        }\n                      } else if (_context.t0.request) {\n                        Alert.alert(\"통신을 실패\", \"통신 실패하였습니다.\");\n                      } else {\n                        console.log(\"Error\", _context.t0.message);\n                      }\n\n                    case 10:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, [[0, 7]], Promise);\n            }\n          }]);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [deadlinestyles.defaultFont, deadlinestyles.confirmText],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, \"\\uC0C1\\uD488 \\uCD94\\uAC00\"));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine-client/src/containers/teaminfo/deadline/DeadlineScreen.js"],"names":["React","useState","useEffect","ActionSheetProvider","useSelector","useDispatch","TextInputMask","total_search_item","ImageSelector","Deadline","deadlinestyles","api","ScanScreen","route","navigation","now","Date","dispatch","prodname","setName","prodbarcode","setBrocde","prodimageURL","setImageURL","modalVisible","setModalVisible","getFullYear","getMonth","slice","getDate","date","setdate","state","AuthReducer","token","TeamInfoRducer","selected_team","ItemsReducer","iteminfo","totalSearchItem","barcode","params","console","log","then","navigate","imageURL","name","defaultFont","fontSize","format","text","width","overflow","Text","confirmButton","Alert","alert","style","onPress","set_deladine","tuid","goodsid","result","data","error_code","response","status","message","request","confirmText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TextInput, TouchableOpacity, Text } from \"react-native\";\nimport { ActionSheetProvider } from \"@expo/react-native-action-sheet\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TextInputMask } from \"react-native-masked-text\";\n\nimport { total_search_item } from \"../../../redux/actions/ItemsAction\";\nimport ImageSelector from \"../../../components/Showactionsheet\";\nimport Deadline from \"../../../components/Deadline\";\nimport { deadlinestyles } from \"../../../styles/light/styles\";\nimport * as api from '../../../api/Api'\nimport { Alert } from \"react-native\";\n/**\n * 스캔 스크린입니다.\n *\n */\n\nexport default function ScanScreen({ route, navigation }) {\n  const now = new Date();\n  const dispatch = useDispatch();\n  // 훅\n  const [prodname, setName] = useState(null);\n  const [prodbarcode, setBrocde] = useState(null);\n  const [prodimageURL, setImageURL] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [date, setdate] = useState(\n    `${now.getFullYear()}-${(\"0\" + (1 + now.getMonth())).slice(-2)}-${(\n      \"0\" + now.getDate()\n    ).slice(-2)}`\n  );\n\n  // 토큰을 불러옵니다.\n  const { token } = useSelector((state) => state.AuthReducer);\n  // 선택된 팀을 불러옵니다.\n  const { selected_team } = useSelector((state) => state.TeamInfoRducer);\n\n  // 팀이 등록한 아이템정보를 불러옵니다.\n  const { iteminfo } = useSelector((state) => state.ItemsReducer);\n\n  // 전체 아이템 찾기\n  const totalSearchItem = (token, barcode) =>\n    dispatch(total_search_item(token, barcode));\n\n\n  useEffect(() => {\n    // 바코드\n    setBrocde(route.params.barcode);\n    console.log(iteminfo);\n\n    // 팀이 아이템을 가지고 있지 않을 경우.\n    // 전체 팀이 등록한 아이템리스트를 가져옵니다.\n    if (!iteminfo) {\n      totalSearchItem(token, route.params.barcode).then(() =>\n        navigation.navigate(\"Itemlist\")\n      );\n      // .then(() => setModalVisible(false));\n    } else {\n      // 팀이 아이템을 가지고 있을 때.\n      setImageURL(iteminfo.imageURL);\n      setName(iteminfo.name);\n    }\n  }, []);\n\n  return (\n    <ActionSheetProvider>\n      <Deadline\n        ImageSelector={() => <ImageSelector result={prodimageURL} />}\n        Barcode={prodbarcode}\n        // 날짜 입력 컴포넌트\n        InputDateMask={() => (\n          <TextInputMask\n            style={[deadlinestyles.defaultFont, { fontSize: 18 }]}\n            type={\"datetime\"}\n            options={{\n              format: \"YYYY-MM-DD\",\n            }}\n            placeholder={`${now.getFullYear()}-${(\"0\" + (1 + now.getMonth())).slice(-2)}-${(\"0\" + now.getDate()).slice(-2)}`}\n            value={date}\n            onChangeText={(text) => {\n              setdate(text);\n            }}\n          />\n        )}\n        // 상품명 컴포넌트\n        InputProdName={()=> \n          <TextInput\n              style={[\n                deadlinestyles.defaultFont,\n                { width: 300, overflow: \"scroll\" },\n              ]}\n              placeholder=\"제품명을 입력해주세요.\"\n              onChangeText={(Text) => setName(Text)}\n            >\n              {prodname}\n            </TextInput>\n        }\n        AddProd={()=> \n          <TouchableOpacity style={deadlinestyles.confirmButton} onPress={ () => {\n            Alert.alert(\"\", \"유통기한을 등록하시겠습니까?\", [\n              { text: \"취소\", style: \"cancel\" },\n              { text: \"확인\", onPress: \n                async()=> {\n                try {\n                  const result = await api.set_deladine(token, selected_team.tuid, iteminfo.goodsid, date)\n                  if(result.data.error_code == \"0013\") Alert.alert(\"\", \"유통기한을 등록하였습니다.\",[\n                    {text: \"확인\", onPress:()=> navigation.navigate(\"ScanScreen\")}])\n                } catch (error) {\n                  if (error.response) {\n                    // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n                    if (error.response.status === 404) {\n                    } else {\n                      console.log(error.response);\n                      Alert.alert(\"40*에러\", error.response.message);\n                    }\n                  } else if (error.request) {\n                    // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n                    Alert.alert(\"통신을 실패\", \"통신 실패하였습니다.\");\n                  } else {\n                    // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n                    console.log(\"Error\", error.message);\n                  }\n                }\n              }\n            }\n            ])\n          }}>\n            <Text style={[deadlinestyles.defaultFont, deadlinestyles.confirmText]}>\n              상품 추가\n            </Text>\n          </TouchableOpacity>\n        }\n      />\n    </ActionSheetProvider>\n  );\n}"]},"metadata":{},"sourceType":"module"}