{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/minje/Desktop/DeadLine-client/src/containers/teaminfo/deadline/ScanScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loading from \"../../../components/Loading\";\nimport { team_search_item } from \"../../../redux/actions/ItemsAction\";\nexport default function ScanScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      scanned = _useState2[0],\n      setScanned = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.AuthReducer;\n  }),\n      token = _useSelector.token;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.TeamInfoRducer;\n  }),\n      selected_team = _useSelector2.selected_team;\n\n  var dispatch = useDispatch();\n\n  var teamSearchItem = function teamSearchItem(token, barcode, teamuid) {\n    return dispatch(team_search_item(token, barcode, teamuid));\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"A\");\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 3:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n\n              if (status !== \"granted\") {\n                alert(\"카메라 권한이 없습니다.\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  }, []);\n\n  var Scanned = function Scanned(barcode) {\n    setModalVisible(true);\n    teamSearchItem(token, barcode, selected_team.tuid).then(function () {\n      return navigation.navigate(\"DeadlineScreen\", {\n        barcode: barcode\n      });\n    }).then(function () {\n      return setModalVisible(false);\n    }).catch(function () {\n      return alert(\"에러\");\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      width: \"100%\",\n      height: \"80%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(BarCodeScanner, {\n    onBarCodeScanned: scanned ? undefined : Scanned(),\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      width: \"100%\",\n      height: \"25%\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      padding: 20\n    },\n    onPress: function onPress() {\n      return Scanned(12332);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, React.createElement(FontAwesome, {\n    name: \"circle\",\n    size: 90,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })), React.createElement(Loading, {\n    animationType: \"none\",\n    visible: modalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  }\n});","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine-client/src/containers/teaminfo/deadline/ScanScreen.js"],"names":["React","useState","useEffect","BarCodeScanner","FontAwesome","useDispatch","useSelector","Loading","team_search_item","ScanScreen","navigation","scanned","setScanned","modalVisible","setModalVisible","state","AuthReducer","token","TeamInfoRducer","selected_team","dispatch","teamSearchItem","barcode","teamuid","console","log","requestPermissionsAsync","status","alert","Scanned","tuid","then","navigate","catch","styles","container","width","height","undefined","justifyContent","alignItems","padding","StyleSheet","create","flex","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, StyleSheet, TouchableOpacity, Modal } from \"react-native\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Loading from \"../../../components/Loading\";\nimport { team_search_item } from \"../../../redux/actions/ItemsAction\";\n\n/**\n * 스캔 스크린입니다.\n *\n */\nexport default function ScanScreen({ navigation }) {\n  // 현재 스캔상태\n  const [scanned, setScanned] = useState(true);\n  const [modalVisible, setModalVisible] = useState(false);\n  // 리둑스에서 토큰을 받아옵니다.\n  const { token } = useSelector((state) => state.AuthReducer);\n  // 리둑스에서 선택된 팀의 정보를 받아옵니다.\n  const { selected_team } = useSelector((state) => state.TeamInfoRducer);\n  const dispatch = useDispatch();\n\n  // 팀내에 아이템 찾기\n  const teamSearchItem = (token, barcode, teamuid) =>\n    dispatch(team_search_item(token, barcode, teamuid));\n\n  useEffect(() => {\n    // 카메라 권한 확인\n    async () => {\n      console.log(\"A\");\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\n      if (status !== \"granted\") {\n        alert(\"카메라 권한이 없습니다.\");\n      }\n    };\n  }, []);\n  // 스캔!\n  const Scanned = (barcode) => {\n    setModalVisible(true);\n    teamSearchItem(token, barcode, selected_team.tuid)\n      .then(() => navigation.navigate(\"DeadlineScreen\", { barcode: barcode }))\n      .then(() => setModalVisible(false))\n      .catch(()=> alert(\"에러\"))\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={{ width: \"100%\", height: \"80%\" }}>\n        <BarCodeScanner\n          onBarCodeScanned={scanned ? undefined : Scanned()}\n          style={{ width: \"100%\", height: \"100%\" }}\n        />\n        <View\n          style={{\n            width: \"100%\",\n            height: \"25%\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <TouchableOpacity\n            style={{ padding: 20 }}\n            onPress={() => Scanned(12332)}\n          >\n            <FontAwesome name=\"circle\" size={90} />\n          </TouchableOpacity>\n          <Loading animationType={\"none\"} visible={modalVisible} />\n        </View>\n        {/* \n      </View>\n      <View>\n        {this.state.barcodetype == 0 ? (\n          <Text>상품의 바코드를 입력하여 등록하세요!</Text>\n        ) : this.state.barcodetype == 1 ? (\n          <Text>상품 바코드를 스캔하여 상품을 등록하세요!</Text>\n        ) : (\n          <Text>사진을 찍고 상품을 등록하세요!</Text>\n        )}\n      </View>\n      <View style={{ flex: 1, flexDirection: \"row\" }}>\n        {this.state.cameramode ? (\n          <View style={{ flex: 1, flexDirection: \"row\" }}>\n            <TouchableOpacity\n              style={{ padding: 30 }}\n              onPress={() => this.setState({ cameramode: false })}\n            >\n              <MaterialIcons name=\"arrow-back\" size={50} />\n            </TouchableOpacity>\n            <TouchableOpacity style={{ padding: 20 }}>\n              <FontAwesome name=\"circle\" size={90} />\n            </TouchableOpacity>\n          </View>\n        ) : (\n          <>\n            <TouchableOpacity>\n              <FontAwesome name=\"pencil-square-o\" size={20} />\n              <Text\n                style={{ borderColor: \"black\", borderWidth: 1 }}\n                onPress={() => {\n                  navigation.navigate(\"inputcode\");\n                }}\n              >\n                바코드입력\n              </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity>\n              <FontAwesome name=\"barcode\" size={20} />\n              <Text\n                style={{ borderColor: \"black\", borderWidth: 1 }}\n                onPress={() => {\n                  this.context.scancode();\n                  scanbarcode(\n                    this.state.token,\n                    12332,\n                    this.context.teaminfo.tuid,\n                    this.props\n                  );\n                }}\n              >\n                바코드 스캔\n              </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity>\n              <FontAwesome name=\"camera-retro\" size={20} />\n              <Text\n                style={{ borderColor: \"black\", borderWidth: 1 }}\n                onPress={() => {\n                  this.context.snapcode();\n                  this.setState({ barcodetype: 2, cameramode: true });\n                }}\n              >\n                바코드 없는 상품\n              </Text>\n            </TouchableOpacity>\n          </>\n        )} */}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}