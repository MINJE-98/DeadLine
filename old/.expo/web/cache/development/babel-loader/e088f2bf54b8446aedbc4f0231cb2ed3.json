{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/minje/Desktop/DeadLine-client/src/navigation/home/HomeNavigator.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from \"../../containers/home/HomeScreen\";\nvar Stack = createStackNavigator();\n\nvar HomeNavigator = function (_Component) {\n  _inherits(HomeNavigator, _Component);\n\n  var _super = _createSuper(HomeNavigator);\n\n  function HomeNavigator() {\n    _classCallCheck(this, HomeNavigator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HomeNavigator, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Stack.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerStyle: {\n            backgroundColor: 'transparent',\n            elevation: 0,\n            shadowOpacity: 0,\n            borderBottomWidth: 0\n          },\n          headerTitle: function headerTitle() {\n            return React.createElement(React.Fragment, null);\n          },\n          headerLeft: function headerLeft() {\n            return React.createElement(Text, {\n              style: {\n                color: \"#3c444f\",\n                fontWeight: 'bold',\n                fontSize: 20,\n                paddingLeft: 20,\n                padding: 10\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 38\n              }\n            }, \"\\uD300 \\uB9AC\\uC2A4\\uD2B8\");\n          },\n          headerRight: function headerRight() {\n            return React.createElement(View, {\n              style: {\n                flexDirection: 'row'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 21\n              }\n            }, React.createElement(TouchableOpacity, {\n              style: {\n                paddingTop: 10,\n                paddingLeft: 5,\n                padding: 10\n              },\n              onPress: function onPress() {\n                return _this.props.navigation.navigate('maketeam');\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 25\n              }\n            }, React.createElement(MaterialIcons, {\n              name: \"group-add\",\n              size: 25,\n              color: \"#3c444f\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 25\n              }\n            })), React.createElement(TouchableOpacity, {\n              style: {\n                paddingTop: 10,\n                paddingLeft: 5,\n                padding: 10\n              },\n              onPress: function onPress() {\n                return _this.props.navigation.navigate('jointeam');\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 25\n              }\n            }, React.createElement(MaterialIcons, {\n              name: \"email\",\n              size: 25,\n              color: \"#3c444f\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 25\n              }\n            })), React.createElement(TouchableOpacity, {\n              style: {\n                paddingTop: 10,\n                paddingLeft: 5,\n                padding: 10\n              },\n              onPress: function onPress() {\n                return _this.props.navigation.navigate('setting');\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 25\n              }\n            }, React.createElement(MaterialIcons, {\n              name: \"settings\",\n              size: 25,\n              color: \"#3c444f\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 25\n              }\n            })));\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return HomeNavigator;\n}(Component);\n\nexport { HomeNavigator as default };","map":{"version":3,"sources":["/Users/minje/Desktop/DeadLine-client/src/navigation/home/HomeNavigator.js"],"names":["React","Component","MaterialIcons","createStackNavigator","HomeScreen","Stack","HomeNavigator","headerStyle","backgroundColor","elevation","shadowOpacity","borderBottomWidth","headerTitle","headerLeft","color","fontWeight","fontSize","paddingLeft","padding","headerRight","flexDirection","paddingTop","props","navigation","navigate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TouchableOpacity, Text, Alert, View } from 'react-native';\nimport  MaterialIcons  from 'react-native-vector-icons/MaterialIcons';\n// import  MaterialCommunityIcons  from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { createStackNavigator } from '@react-navigation/stack';\n// import { connect } from 'react-redux';\n\n// import { Context } from '../../context/conext';\nimport HomeScreen from '../../containers/home/HomeScreen';\n// import SettingScreen from '../../../screens/home/setting/Setting.screen';\n// import TeamInfoNavigator from '../../../navigations/Teaminfo.navigator';\n\n// const setting  = connect(state => ({ islogin: state.islogin}))(SettingScreen);\n// const home  = connect(state => ({ islogin: state.islogin }))(HomeScreen);\n\nconst Stack = createStackNavigator();\nexport default class HomeNavigator extends Component{\n//   static contextType = Context\n\n    render(){\n        return(\n            <Stack.Navigator>          \n                <Stack.Screen name=\"Home\" component={HomeScreen} options={{\n                    headerStyle: {\n                    backgroundColor: 'transparent',\n                    elevation: 0,\n                    shadowOpacity: 0,\n                    borderBottomWidth: 0,\n                    },\n                    headerTitle: ()=>(<></>),\n                    headerLeft: ()=>(<Text style={{color: \"#3c444f\", fontWeight: 'bold', fontSize: 20, paddingLeft: 20, padding: 10}}>팀 리스트</Text>),\n                    headerRight: ()=>(\n                    <View style={{flexDirection: 'row'}}>\n                        <TouchableOpacity style={{paddingTop: 10, paddingLeft: 5 , padding: 10}} onPress={()=> this.props.navigation.navigate('maketeam')}>\n                        <MaterialIcons name=\"group-add\" size={25} color=\"#3c444f\" />\n                        </TouchableOpacity>\n                        <TouchableOpacity style={{paddingTop: 10, paddingLeft: 5, padding: 10}} onPress={()=> this.props.navigation.navigate('jointeam')}>\n                        <MaterialIcons name=\"email\" size={25} color=\"#3c444f\"/>\n                        </TouchableOpacity>\n\n                        <TouchableOpacity style={{paddingTop: 10, paddingLeft: 5, padding: 10}} onPress={()=> this.props.navigation.navigate('setting')}>\n                        <MaterialIcons name=\"settings\" size={25} color=\"#3c444f\" />\n                        </TouchableOpacity>\n                    </View>\n                    \n                    )\n                    \n                }}/>\n                {/* <Stack.Screen name=\"setting\" component={setting} \n                options={{\n                    headerStyle: {\n                    backgroundColor: 'transparent',\n                    elevation: 0,\n                    shadowOpacity: 0,\n                    borderBottomWidth: 0,\n                    },\n                    headerTitle: ()=>(<></>),\n                    headerLeft: ()=>(\n                    <View style={{flexDirection: 'row'}}>\n                        <TouchableOpacity style={{paddingLeft: 10}} onPress={()=> this.props.navigation.goBack()}>\n                            <MaterialIcons name=\"close\" size={25} color=\"#3c444f\"/>\n                        </TouchableOpacity>\n                        <Text style={{color: \"#3c444f\", fontWeight: 'bold', fontSize: 20, marginLeft: 10}}></Text>\n                    </View>\n                    )\n                }}/> */}\n            </Stack.Navigator>\n        )\n    }\n}\n  \n\n"]},"metadata":{},"sourceType":"module"}